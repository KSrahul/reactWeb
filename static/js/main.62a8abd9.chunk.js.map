{"version":3,"sources":["Components/Header/logo.svg","Components/Header/Menu.js","Components/FIlterPage/FilterTabs.js","Components/FIlterPage/FilterItems.js","Components/FIlterPage/FilterMain.js","Components/SearchPage/SearchItems.js","Components/SearchPage/InputSearchView.js","Components/SearchPage/SearchMain.js","Components/TodoPage/TodoItems.js","Components/TodoPage/EditTodoModal.js","Components/TodoPage/ToDoTextFiled.js","Components/TodoPage/TodoMain.js","Components/Sample4/BoxItems.js","App.jsx","reportWebVitals.js","index.jsx"],"names":["Menu","FilterTabs","props","className","uniquItems","map","itemsCate","indexVal","data-name","classActive","onClick","filterItemsData","filterAllItems","allCateItems","allItems","id","image","category","dexcription","data-itemcate","src","alt","FilterMain","allItemsValue","Set","allFilterData","uniqItems","useState","filterSelected","filterData","indexOf","classActiveCheck","classActiveFun","useEffect","selectedFilterItems","filter","selectedFilter","length","itemsName","indexNum","updatedItems","currentItem","FilterItems","SearchItems","searchItemsData","searchItes","index","onMouseOver","onHover","statename","InputSearchView","onChange","InputValChange","value","inputSetValue","type","placeholder","removeInputVal","xmlns","width","height","viewBox","fill","fillRule","d","SearchMain","filterSearchData","setSearchDataFun","wordEnter","wordEnterFun","valInput","searchText","target","toLowerCase","newSearchData","JsonSearchData","includes","hoverVal","TodoItems","allTodoList","todoListObj","isDone","listName","editItems","markRead","removeItems","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","EditTodoModal","textAraFocus","useRef","current","select","focus","removeEditText","editTodoValue","onKeyDown","textareaEnter","ref","defaultValue","editeTodoField","saveEditValue","ToDoTextFiled","inputType","keyCheck","inputValue","inputFocus","addItems","TodoMain","setInputValue","todoLS","localStorage","getItem","JSON","parse","getTodoFromLS","toDoDataObject","setToDoObject","editeTextField","setEditText","editItemObj","setEditItemObj","todoDataObj","Date","getTime","toString","isRemove","saveEditData","editedTodoData","editedData","setItem","stringify","event","key","targetTodoItem","restTodoData","todoNew","itemObj","markedReadData","markedRead","editObj","window","confirm","BoxItems","isSelected","setSelected","BoxData","boxItem","boxId","title","content","App","basename","process","exact","path","component","Example2","Example3","Example4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62a8abd9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport {} from './navbar.css';\nimport {NavLink} from 'react-router-dom'\n\nconst Menu = () => {\n    return (\n        <>\n            {/* <div className=\"flex header_main\">\n                <div>\n                    <img src={logo} width=\"100\" alt=\"logo\" />\n                </div>\n                <ul className=\"flex menu_list\">             \n                    <li>\n                        <NavLink exact activeClassName=\"active_menu\" to=\"/\">Sample1</NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact activeClassName=\"active_menu\" to=\"/SearchPage\">Sample2</NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact activeClassName=\"active_menu\" to=\"/TodoPage\">Sample3</NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact activeClassName=\"active_menu\" to=\"/Example4\">Sample4</NavLink>\n                    </li>\n                </ul>\n            </div> */}\n        </>\n    )\n}\n\nexport default Menu;","// uniquItems, filterItemsData, classActive\nconst FilterTabs = (props) => {\n    return(\n        <>\n            <div className=\"tabs_boxes_container\">\n                <div className=\"tabs_raw\">\n                    {\n                        props.uniquItems.map((itemsCate, indexVal) => {\n                            return(\n                                <div key={indexVal} data-name={itemsCate}\n                                    className={\n                                        `tabsLink ${props.classActive === indexVal ? \"activeTabs\" : \"\"}`\n                                    }\n                                    onClick={() => props.filterItemsData(itemsCate, indexVal)}\n                                >\n                                    {itemsCate}\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default FilterTabs;","const filterAllItems = (props) => {\n    return(\n        <>\n            <div className=\"items_main\">\n                {\n                    props.allCateItems.map((allItems) =>{\n                        const {id, image, category, dexcription} = allItems;\n                        return( \n                            <div key={id} className=\"items_divs\" data-itemcate={category}>\n                                <img src={image} alt={dexcription} />\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        </>\n    )\n}\nexport default filterAllItems;","import React, { useState, useEffect } from 'react';\nimport {} from './Filter.css';\nimport FilterTabs from './FilterTabs';\nimport FilterItems from './FilterItems';\nimport allFilterData from './FilterData';\n\n\nconst FilterMain = () => {\n    const allItemsValue = [\n        \"all\", ...new Set(allFilterData.map((uniqItems) => {\n            return uniqItems.category\n        }))  \n    ];\n\n    const [filterSelected] = useState(allItemsValue[0]);\n    const [filterData, filterItemsData] = useState(allFilterData);\n    const [classActiveCheck, classActiveFun] = useState(allItemsValue.indexOf(filterSelected));\n    const clickTabs = (itemsName, indexNum) => {\n        const updatedItems = allFilterData.filter((currentItem) => {\n            return currentItem.category === itemsName ? currentItem : false;\n        })\n        filterItemsData(updatedItems.length > 0 ? updatedItems : allFilterData)\n        classActiveFun(indexNum);\n    }\n\n    useEffect(() => {\n        const selectedFilterItems = filterData.filter((selectedFilter) => {\n            return selectedFilter.category === filterSelected ? selectedFilter : false;\n        })\n        filterItemsData(selectedFilterItems.length > 0 ? selectedFilterItems : allFilterData)\n    }, []);\n\n    return(\n        <>\n            <FilterTabs \n                uniquItems={allItemsValue}\n                filterItemsData={clickTabs} \n                classActive={classActiveCheck}>\n             </FilterTabs>\n\n            <FilterItems \n                allCateItems={filterData}>\n            </FilterItems>\n        </>\n    )\n}\n\nexport default FilterMain;","const SearchItems = (props) => {\n    return(\n        <>\n            {\n                props.searchItemsData.length > 0 ?\n                    <div className=\"search_content\">\n                        {\n                            props.searchItemsData.map((searchItes, index) => {\n                                return(\n                                    <div key={index} className=\"searchItem\" \n                                        onMouseOver={() => props.onHover(searchItes.statename)}>\n                                        {searchItes.statename}\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                :false\n            }\n        </>\n    )\n}\n\nexport default SearchItems","const InputSearchView = (props) => {\n    return(\n        <>\n            <input onChange={props.InputValChange} value={props.inputSetValue} className=\"search_input\" type=\"text\" placeholder=\"Search your state, e.g Haryana\" />\n            <div className=\"search_pop_icon\">\n                {\n                    props.inputSetValue.length > 0 ?\n                        <div className=\"cross_icon\" onClick={props.removeInputVal}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"22\" viewBox=\"0 0 22 22\">\n                                <g fill=\"none\" fillRule=\"evenodd\">\n                                    <path fill=\"#BDBDBD\" d=\"M11 21C5.477 21 1 16.523 1 11S5.477 1 11 1s10 4.477 10 10-4.477 10-10 10zm.95-10l2.853-2.852a.672.672 0 10-.95-.951L11 10.049 8.148 7.197a.672.672 0 10-.951.95L10.049 11l-2.852 2.852a.672.672 0 00.95.951L11 11.951l2.852 2.852a.672.672 0 10.951-.95L11.951 11z\"></path>\n                                    <path d=\"M0 0H22V22H0z\"></path>\n                                </g>\n                            </svg>\n                        </div>\n                    :\n                    <div className=\"search_icon\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"22\" viewBox=\"0 0 22 22\">\n                            <g fill=\"none\" fillRule=\"evenodd\">\n                                <path fill=\"#9E9E9E\" fillRule=\"nonzero\" d=\"M18.465 17.319l-3.728-3.81a6.13 6.13 0 001.484-3.995c0-3.426-2.838-6.214-6.325-6.214-3.488 0-6.325 2.788-6.325 6.214 0 3.426 2.837 6.214 6.325 6.214 1.309 0 2.557-.388 3.623-1.124l3.757 3.838c.157.16.368.249.595.249.214 0 .417-.08.571-.226a.801.801 0 00.023-1.146zM9.895 4.92c2.578 0 4.676 2.06 4.676 4.593s-2.098 4.593-4.675 4.593c-2.578 0-4.675-2.06-4.675-4.593s2.097-4.593 4.675-4.593z\"></path>\n                                <path d=\"M0 0H22V22H0z\"></path>\n                            </g>\n                        </svg>\n                    </div>\n                }\n            </div>\n        </>\n    )\n}\nexport default InputSearchView","import React, { useState } from 'react'\nimport {} from '../SearchPage/Search.css'\nimport JsonSearchData from './SearchData.json'\nimport SearchItems from './SearchItems'\nimport InputSearchView from './InputSearchView'\nconst SearchMain = () => {\n    const [filterSearchData, setSearchDataFun] = useState([]);\n    const [wordEnter, wordEnterFun] = useState(\"\");\n    const InputValueChange = (valInput) => {\n        const searchText = valInput.target.value.toLowerCase();\n        wordEnterFun(searchText);\n        const newSearchData = JsonSearchData.filter((value) => {\n            const findState = value.statename.toLowerCase();\n            return findState.includes(searchText);\n        });\n        \n        searchText === \"\" ? setSearchDataFun([]) : setSearchDataFun(newSearchData);\n    }\n    const removeInputVal = () => {\n        setSearchDataFun([]);\n        wordEnterFun(\"\");\n    }\n    const hoverText = (hoverVal) => {\n        wordEnterFun(hoverVal);\n    }\n\n    return(\n        <div className=\"search_main\">\n            <div className=\"indian_sta\">Type.. any state name of India.</div>\n            <div className=\"relative\">\n\n                <InputSearchView \n                    InputValChange={InputValueChange}\n                    removeInputVal={removeInputVal}\n                    inputSetValue={wordEnter}>\n                 </InputSearchView>\n\n                <SearchItems \n                    searchItemsData={filterSearchData}\n                    onHover={hoverText}>\n                </SearchItems>\n                \n            </div>\n            {\n                wordEnter.length > 0 && filterSearchData.length === 0 ?\n                    <>\n                        <div className=\"show_error\">No Result Found :(</div>\n                    </>\n                : false\n            }\n        </div>\n    )\n}\n\n\nexport default SearchMain","const TodoItems = (props) => {\n    return(\n        <>\n            {\n                props.allTodoList.map((todoListObj) =>{\n                    return(\n                        <div className={`flex added_items ${todoListObj.isDone === true ? 'marked_done' : ''}`} key={todoListObj.id}>\n                            <div className=\"task_name\">{todoListObj.listName}</div>\n                            <div className=\"flex right_icons\">\n                                <div className=\"flex pointer edit_icon\" onClick={() => props.editItems(todoListObj)}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"white\">\n                                        <path d=\"M1.438 16.872l-1.438 7.128 7.127-1.438 12.642-12.64-5.69-5.69-12.641 12.64zm2.271 2.253l-.85-.849 11.141-11.125.849.849-11.14 11.125zm20.291-13.436l-2.817 2.819-5.69-5.691 2.816-2.817 5.691 5.689z\" />\n                                    </svg>\n                                </div>\n                                <div className=\"pointer eye_mark relative flex\" onClick={() => props.markRead(todoListObj)}>\n                                    <svg fill=\"white\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                        <path d=\"M15 12c0 1.654-1.346 3-3 3s-3-1.346-3-3 1.346-3 3-3 3 1.346 3 3zm9-.449s-4.252 8.449-11.985 8.449c-7.18 0-12.015-8.449-12.015-8.449s4.446-7.551 12.015-7.551c7.694 0 11.985 7.551 11.985 7.551zm-7 .449c0-2.757-2.243-5-5-5s-5 2.243-5 5 2.243 5 5 5 5-2.243 5-5z\" />\n                                    </svg>\n                                    <div className=\"lin_eye\"></div>\n                                </div>\n                                <div className=\"remove_item flex pointer\" onClick={() => props.removeItems(todoListObj.id)}>\n                                    <svg xmlns='http://www.w3.org/2000/svg' width='22' height='22' \n                                        viewBox='0 0 24 24' fill='none' stroke='#ff3d46' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round'>\n                                        <polyline points='3 6 5 6 21 6' />\n                                        <path d='M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2' />\n                                        <line x1='10' y1='11' x2='10' y2='17' />\n                                        <line x1='14' y1='11' x2='14' y2='17' />\n                                    </svg>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </>\n    )\n}\n\nexport default TodoItems","import { useRef, useEffect } from \"react\"\n\nconst EditTodoModal = (props) => {\n    const textAraFocus = useRef(null)\n\n    useEffect(() => {\n        textAraFocus.current.select();\n        textAraFocus.current.focus();\n    }, [])\n    return (\n        <>\n            <div className=\"quick_edit\">\n                <div className=\"cross_sign pointer\" onClick={props.removeEditText}>\n                    <svg stroke=\"white\" fill=\"whiite\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"30\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill=\"white\" stroke=\"white\" strokeWidth=\"2\" d=\"M3,3 L21,21 M3,21 L21,3\"></path>\n                    </svg>\n                </div>\n                <div className=\"text_save pointer\">\n                    <textarea onChange={props.editTodoValue} onKeyDown={props.textareaEnter} ref={textAraFocus} defaultValue={props.editeTodoField}></textarea>\n                    <div className=\"save_btn\" onClick={props.saveEditValue}>Save</div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default EditTodoModal\n","import React from 'react'\n\nfunction ToDoTextFiled(props) {\n    return (\n        <div className=\"input_add relative\">\n            <input \n                onChange={props.inputType}\n                onKeyDown={props.keyCheck}\n                value={props.inputValue}\n                ref={props.inputFocus}\n                type=\"text\" \n                placeholder=\"Add New Task\" />\n\n            <div className={`add_btn pointer ${props.inputValue.length > 0 ? \"active_cta\" : \"\"}`}\n                onClick={props.addItems}>\n                +\n            </div>\n        </div>\n    )\n}\n\nexport default ToDoTextFiled\n","import React, { useState, useEffect, useRef } from 'react'\nimport {} from './Todo.css'\nimport TodoItems from './TodoItems'\nimport EditTodo from './EditTodoModal';\nimport ToDoTextFiled from './ToDoTextFiled';\n\nconst getTodoFromLS = () =>{\n    const todoLS = localStorage.getItem(\"allTodoData\");\n    if(todoLS){\n        return JSON.parse(todoLS);\n    }else{\n        return [];\n    }\n}\nconst TodoMain = () => {\n    const inputFocus = useRef([]);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [toDoDataObject, setToDoObject] = useState(getTodoFromLS());\n    const [editeTextField, setEditText] = useState(\"\");\n    const [editItemObj, setEditItemObj] = useState(\"\");\n    const todoDataObj = () =>{\n        setToDoObject(\n            [\n                {\n                    id : new Date().getTime().toString(),\n                    listName : inputValue,\n                    isDone : false,\n                    isRemove : false,\n                },\n                ...toDoDataObject\n            ]\n        )\n    }\n    const inputOnType = (event) => {\n        setInputValue(event.target.value);\n    }\n\n    const addItemBtn = () => {\n        if(inputValue.length > 0){\n            setInputValue(\"\");\n            todoDataObj();\n        }\n    }\n\n    const keyTypeCheck = (event) => {\n        if(event.key === \"Enter\" && inputValue.length > 0){\n            setInputValue(\"\");\n            todoDataObj();\n        }\n    }\n\n    const removeSelectedItems = (targetTodoItem) => {\n        const restTodoData = toDoDataObject.filter((todoNew) =>{\n            return todoNew.id !== targetTodoItem;\n        })\n        setToDoObject(restTodoData);\n    }\n\n    const markAsDone = (itemObj) => {\n        const markedReadData = toDoDataObject.filter((markedRead) => {\n            if(markedRead.id === itemObj.id){\n                markedRead.isDone === false ? \n                markedRead.isDone = true : \n                markedRead.isDone = false;\n            }\n            return markedRead;\n        })\n\n        setToDoObject(markedReadData);\n    }\n\n    const editTodoItems = (editObj) => {\n        setEditText(editObj.listName);\n        setEditItemObj(editObj);\n    }\n\n    const newEditValue = (event) => {\n        if (event.target.value.length > 0) {\n            setEditText(event.target.value);\n        }\n    }\n\n    const saveEditData = () => {\n        const editedTodoData = toDoDataObject.filter((editedData) => {\n            if (editedData.id === editItemObj.id) {                \n                editedData.listName = editeTextField;\n            }\n            return editedData;\n        })\n        setToDoObject(editedTodoData);\n        setEditText(\"\");\n    }\n\n    const textareaEnterPress = (event) => {\n        if (event.key === \"Enter\" || event.key === \"Escape\") {\n            saveEditData();\n        }\n    }\n\n    const closeEditModal = () =>{\n        setEditText(\"\");\n        setEditItemObj(\"\");\n    }\n\n    localStorage.setItem(\"allTodoData\", JSON.stringify(toDoDataObject));\n\n    useEffect(() => {\n        inputFocus.current.focus();\n    }, [])\n\n      return(\n          <>\n            <div className=\"todo_main\">\n                <div className=\"todo_text\">Add Your Todo List</div>\n                \n                <ToDoTextFiled\n                    inputType={inputOnType}\n                    inputValue={inputValue}\n                    keyCheck={keyTypeCheck}\n                    inputFocus={inputFocus}\n                    addItems={addItemBtn}>\n                </ToDoTextFiled>\n\n                {\n                    toDoDataObject.length > 0 ? \n                        <div className=\"all_todo\">\n                            <TodoItems \n                                allTodoList={toDoDataObject}\n                                removeItems={removeSelectedItems}\n                                markRead={markAsDone}\n                                editItems={editTodoItems}>\n                            </TodoItems>\n                        </div>\n                    :false\n                }\n\n                {\n                    editeTextField.length > 0 ?\n                        <EditTodo\n                            removeEditText={closeEditModal}\n                            editTodoValue={newEditValue}\n                            textareaEnter={textareaEnterPress}\n                            editeTodoField={editeTextField}\n                            saveEditValue={saveEditData}>\n                        </EditTodo>\n                    :false\n                }\n                {\n                    toDoDataObject.length > 0 ?\n                        <div className=\"cta_action flex\">\n                            <div className=\"pending_task\">You Have {toDoDataObject.length} Pending Task</div>\n                            <div className=\"clear_items pointer\" \n                                onClick={() => {\n                                    const confirmRemove = window.confirm(\"Are You Sure?\");\n                                    if(confirmRemove){\n                                        setToDoObject([]);\n                                    }\n                                }}>\n                                Clear Items\n                            </div>\n                        </div>\n                    :false\n                }\n            </div>\n\n        </>\n      )\n\n}\n\nexport default TodoMain","import React, {useState, useRef, useEffect} from 'react'\nimport BoxData from './BoxData.json'\nimport {} from './Box.css'\n\nfunction BoxItems() {\n    const [isSelected, setSelected] = useState(\"\");\n    const boxClick = (event) => {\n        setSelected(isSelected === event ? false : event);\n    }\n    \n    return (\n        <div className=\"boxes_main\">\n            {  \n                BoxData.map((boxItem, boxId) =>{\n                    return(\n                        <div className=\"accor_main\" key={boxId}>\n                            \n                            <div className={`pointer`} onClick={() => boxClick(boxId)}>{boxItem.title}</div>\n\n                            <div className={`accod_content ${isSelected === boxId ? \"show_content\" : \"\"}`}>{boxItem.content}</div>\n                            \n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default BoxItems\n","import './Main.css';\nimport Menu from './Components/Header/Menu';\nimport FilterMain from './Components/FIlterPage/FilterMain'\nimport Example2 from './Components/SearchPage/SearchMain';\nimport Example3 from './Components/TodoPage/TodoMain'\nimport Example4 from './Components/Sample4/BoxItems'\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Menu></Menu>\n        <div className=\"main_container\">\n          <Switch>\n              <Route exact path='/' component={FilterMain}></Route>\n              <Route exact path='/SearchPage' component={Example2}></Route>\n              <Route exact path='/TodoPage' component={Example3}></Route>\n              <Route exact path='/Example4' component={Example4}></Route>\n          </Switch>\n        </div>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import {HashRouter as Router} from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Router> */}\n      <App />\n    {/* </Router> */}\n  </React.StrictMode>,\n  document.getElementById('main')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}