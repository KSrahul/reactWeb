{"version":3,"sources":["Context/CartDataContext.jsx","Components/ShopingCart/CartIcon.jsx","Components/Header/Menu.jsx","Components/Tabs/TabsContent.jsx","Components/Tabs/TabsMenu.jsx","Components/Tabs/TabsMain.jsx","Components/SearchPage/SearchItems.jsx","Components/SearchPage/InputSearchView.jsx","Components/SearchPage/SearchMain.jsx","Components/TodoPage/EditTodoModal.jsx","Components/TodoPage/TodoItems.jsx","Components/TodoPage/ToDoTextFiled.jsx","Components/TodoPage/TodoTabs.jsx","Components/TodoPage/TodoMain.jsx","Components/TodoPage/TodoDefaultData.jsx","Components/Accordion/BoxItems.js","Components/ShopingCart/ShopingItem.jsx","Components/ShopingCart/ShopingMain.jsx","Components/ShopingCart/ShopingCart.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["CartDataContext","createContext","DataToSendFun","props","useState","shopingData","localStorage","getItem","JSON","parse","getShopingData","shopingItems","setShopingItems","length","cartItemCount","setCartItemCount","Provider","value","children","ShopingCartIcon","useContext","window","location","hash","className","onClick","alert","xmlns","data-name","viewBox","width","fill","d","cx","cy","r","Menu","openHame","setOpenHame","menuClick","id","exact","activeClassName","to","TabsContent","TabContent","map","element","index","activeContent","tab_content","TabsMenu","allTabsData","tabsMenu","tab_text","classActiveCheck","clickTabs","FilterTabs","classActiveFun","indexNum","console","log","target","offsetLeft","SearchItems","searchItemsData","searchItes","onMouseOver","onHover","statename","InputSearchView","ref","searchFocus","onChange","InputValChange","inputSetValue","type","placeholder","removeInputVal","height","fillRule","SearchMain","useRef","JsonSearchData","filterSearchData","setSearchDataFun","wordEnter","wordEnterFun","useEffect","current","focus","valInput","searchText","toLowerCase","newSearchData","filter","includes","hoverVal","EditTodoModal","textAraFocus","editTodoValue","onKeyDown","textareaEnter","defaultValue","todoObj","listName","saveEditValue","removeEditText","TodoItems","allTodoList","todoListObj","i","isDone","editTxtField","checked","markRead","targetElement","editItems","removeItems","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","ToDoTextFiled","inputType","keyCheck","textAreaVal","inputFocus","addItems","arrayTabs","TodoTabs","allCount","tabsName","todoTabsToggle","classTabs","activeCount","completeCount","clearAll","todoActionsType","todoDefaultStates","todoAllData","todoLS","isRemove","TodoDefaultData","inputValue","editeTextField","editItemObj","todoCount","todoReducer","todoState","todoAction","inputTextValue","Date","getTime","toString","classTabsIndex","markedReadData","removeItem","saveValue","TodoMain","useReducer","todoCurrentData","todoDataUpdate","addItemsMethod","setItem","stringify","event","getInputValue","key","itemObj","markedRead","targetTodoItem","restTodoData","todoNew","editObj","confirm","BoxItems","isSelected","setIsSelected","BoxData","boxItem","boxId","title","content","ShopingItem","ShopingData","data","image","name","old_price","price","dexcription","src","alt","itemsObjId","removeFromCart","addToCart","ShopingMain","setShopingData","currentItem","allState","ShopingDataJson","items","itemId","itemName","itemPrice","itemOldPrice","itemImage","itemDesc","quantity","shopingDataObj","push","remvItems","ShopingCart","App","basename","process","path","component","Example3","TabsMain","Example2","Example4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.187cf884.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const CartDataContext = createContext();\n\nexport const DataToSendFun = (props) =>{\n    const getShopingData = () =>{\n        const shopingData = localStorage.getItem(\"allShopingData\");\n        if(shopingData){\n            return JSON.parse(shopingData);\n        }else{\n            return [];\n        }\n    }\n    const [shopingItems, setShopingItems] = useState(getShopingData());\n    const [cartItemCount, setCartItemCount] = useState(shopingItems.length);\n    return(\n\n        <CartDataContext.Provider value={{\n            shopingItems,\n            setShopingItems,\n            cartItemCount,\n            setCartItemCount\n        }}>\n            {props.children}\n        </CartDataContext.Provider>\n    )\n}\n\n// export const currentCartItems = (props) =>{\n\n// }","import { CartDataContext } from '../../Context/CartDataContext';\nimport { useContext } from 'react';\nexport const ShopingCartIcon = () =>{\n    const {cartItemCount} = useContext(CartDataContext);\n    const showCart = () =>{\n        alert(\"Clicked\")\n    }\n    return (\n        <>\n            {\n                window.location.hash === \"#/reactWeb/ShopingCart\" ? \n                    <div className=\"cart_items relative pointer\" onClick={showCart}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"0 0 512 512\" width=\"42\">\n                            <path fill=\"#00efd1\"\n                                d=\"M455.13,137.68l-31.16,97.1a50,50,0,0,1-47.61,34.72H156.5l-.97.17L133.16,137.91l1.37-.23Z\"></path>\n                            <path fill=\"#00acea\" d=\"M380.32,383.88a36.06,36.06,0,1,1-36.06,36.06A36.058,36.058,0,0,1,380.32,383.88Z\"></path>\n                            <circle cx=\"199.04\" cy=\"419.94\" r=\"36.06\" fill=\"#00acea\"></circle>\n                            <path fill=\"#083863\"\n                                d=\"M199.04,373.88a46.06,46.06,0,1,0,46.06,46.06A46.113,46.113,0,0,0,199.04,373.88Zm0,72.12a26.06,26.06,0,1,1,26.06-26.06A26.09,26.09,0,0,1,199.04,446Z\">\n                            </path>\n                            <path fill=\"#083863\"\n                                d=\"M380.32,373.88a46.06,46.06,0,1,0,46.05,46.06A46.114,46.114,0,0,0,380.32,373.88Zm0,72.12a26.06,26.06,0,1,1,26.05-26.06A26.09,26.09,0,0,1,380.32,446Z\">\n                            </path>\n                            <path fill=\"#083863\"\n                                d=\"M455.13,127.68H141.566l-6.8-40.04A49.865,49.865,0,0,0,85.47,46H56.87a10,10,0,0,0,0,20h28.6a29.918,29.918,0,0,1,29.581,24.983L151.262,304.3a49.883,49.883,0,0,0,49.3,41.634H413.73a10,10,0,0,0,0-20H200.56a29.932,29.932,0,0,1-29.58-24.982L167.339,279.5H376.36a59.814,59.814,0,0,0,57.131-41.665l31.16-97.1a10,10,0,0,0-9.521-13.055ZM414.448,231.724A39.877,39.877,0,0,1,376.36,259.5H163.943L144.962,147.68H441.419Z\">\n                            </path>\n                        </svg>\n                        <div className=\"cart_count\">{cartItemCount}</div>\n                    </div>\n                : false\n            }\n        </>\n    )\n}\n","import {} from './navbar.css';\nimport {NavLink} from 'react-router-dom'\nimport { useState } from 'react';\nimport { ShopingCartIcon } from '../ShopingCart/CartIcon';\n\nconst Menu = () => {\n    const [openHame, setOpenHame] = useState(false)\n    const openHamMenu = () =>{\n        setOpenHame(!openHame);\n    }\n\n    const menuClick = () =>{\n        setOpenHame(false);\n    }\n    return (\n        <>\n            <style>\n                {\n                `\n                    .main_container{margin-top: 34px;color: black;}\n                    .logo_cen{text-align: center;padding-top: 10px;}\n                    // .hamburger_icon{margin-right: 20px;}\n                    .ham_menus_list{position: fixed;top: 0;width: 100%;left: 0;height: 100%;background-color: white;transform: translateY(-100%);z-index: 9;overflow: hidden;}\n                    .show_ham_menus{transform: translateY(0%);transition: 0.4s;}\n                    .hamburger_icon{z-index: 10;}\n                    #main .ham_cross > svg{fill: red;}\n                    .hamburger_icon > svg > path{transition: 0.4s;}\n                    .ham_cross > svg > #hamone{transform: rotate(21deg) translateY(0px) translateX(16px);}\n                    .ham_cross > svg > #hamtwo{transform: rotate(-25deg) translateY(23px) translateX(-39px);}\n                    .ham_cross > svg > #hamthree{display:none;}\n                    // .shoping_header {background-color: #f7f7f7;box-shadow: unset;}\n                    // .shoping_header .hamburger_icon svg{fill: black;}\n                    .cart_items {margin-right: 20px;top: 4px;}\n                    .cart_ham{align-items: center;}\n                `   \n                }\n            </style>\n            <div className={`flex header_main ${window.location.hash === \"#/reactWeb/ShopingCart\" ? 'shoping_header' : ''}`}>\n                {/* <div>\n                    <img src={logo} width=\"100\" alt=\"logo\" />\n                </div> */}\n\n                <div className=\"flex cart_ham\">\n                    <ShopingCartIcon />\n\n                    <div className={`pointer hamburger_icon relative ${openHame ? \"ham_cross\" : \"\"}`} onClick={openHamMenu}>\n                        <svg fill=\"white\" width=\"40px\" viewBox=\"0 0 128 128\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M64,128a64,64,0,1,1,64-64A64.07,64.07,0,0,1,64,128ZM64,4a60,60,0,1,0,60,60A60.07,60.07,0,0,0,64,4Z\"/>\n                            <path id=\"hamone\" d=\"M95,44H33a2,2,0,0,1,0-4H95a2,2,0,0,1,0,4Z\"/>\n                            <path id=\"hamtwo\" d=\"M95,66H33a2,2,0,0,1,0-4H95a2,2,0,0,1,0,4Z\"/>\n                            <path id=\"hamthree\" d=\"M95,88H33a2,2,0,0,1,0-4H95a2,2,0,0,1,0,4Z\"/>\n                        </svg>\n                    </div>\n\n                </div>\n            </div>\n            <div className={`ham_menus_list ${openHame ? \"show_ham_menus\" : \"\"}`}>\n                    <ul className=\"flex menu_list\">\n                        <li>\n                            <NavLink exact\n                                onClick={menuClick}\n                                activeClassName=\"active_menu\"\n                                to=\"/\">\n                                Todo App\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink exact\n                                onClick={menuClick}\n                                activeClassName=\"active_menu\"\n                                to=\"/TabsMain\">\n                                Custom Tabs\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink exact\n                                onClick={menuClick}\n                                activeClassName=\"active_menu\"\n                                to=\"/SearchPage\">\n                                Search Items\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink exact\n                                onClick={menuClick}\n                                activeClassName=\"active_menu\"\n                                to=\"/Accordion\">\n                                Accordion\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink exact\n                                onClick={menuClick}\n                                activeClassName=\"active_menu\"\n                                to=\"/ShopingCart\">\n                                Shopping Cart\n                            </NavLink>\n                        </li>\n                    </ul>\n                </div>\n        </>\n    )\n}\n\nexport default Menu;","import React from 'react'\n\nconst TabsContent = (props) => {\n    return (\n        <div className=\"items_main\">\n            {\n                props.TabContent.map((element, index) => {\n                    return(\n                        props.activeContent === index ?\n                            <div key={index} className=\"items_divs\">\n                                {element.tab_content}\n                            </div>\n                        : false\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default TabsContent\n","import React from 'react'\n\nexport const TabsMenu = (props) => {\n    return (\n        <>\n            <div className=\"tabs_raw\">\n                {\n                    props.allTabsData.map((tabsMenu, index) => {\n                        const {id, tab_text} = tabsMenu;\n                        return(\n                            <div key={id}\n                                className={\n                                    `tabsLink ${props.classActiveCheck === index ? \"activeTabs\" : \"\"}`\n                                }\n                                onClick={(element) => props.clickTabs(element, index)}\n                            >\n                                {tab_text}\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"div_slide\"></div>\n        </>\n    )\n}\n","import allTabsData from './TabsData';\nimport {} from './Tab.css'\nimport { useState } from 'react';\nimport TabsContent from './TabsContent';\nimport { TabsMenu } from './TabsMenu';\n\nconst FilterTabs = () => {\n    const [classActiveCheck, classActiveFun] = useState(0);\n    const clickTabs = (element, indexNum) => {\n        classActiveFun(indexNum);\n        // target.getBoundingClientRect()\n        console.log(element.target.offsetLeft)\n    }\n    return(\n        <div className=\"tabs_boxes_container\">\n            <TabsMenu \n                allTabsData={allTabsData} \n                classActiveCheck={classActiveCheck} \n                clickTabs={clickTabs} \n            />\n            \n            <TabsContent \n                TabContent={allTabsData} \n                activeContent={classActiveCheck} \n            />\n        </div>\n    )\n}\n\nexport default FilterTabs;","const SearchItems = (props) => {\n    return(\n        <>\n            {\n                props.searchItemsData.length > 0 ?\n                    <div className=\"search_content\">\n                        {\n                            props.searchItemsData.map((searchItes, index) => {\n                                return(\n                                    <div key={index} className=\"searchItem\" \n                                        onMouseOver={() => props.onHover(searchItes.statename)}>\n                                        {searchItes.statename}\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                :false\n            }\n        </>\n    )\n}\n\nexport default SearchItems","const InputSearchView = (props) => {\n    return(\n        <> \n            <input ref={props.searchFocus} onChange={props.InputValChange} value={props.inputSetValue} className=\"search_input\" type=\"text\" placeholder=\"Search your state, e.g Haryana\" />\n            <div className=\"search_pop_icon\">\n                {\n                    props.inputSetValue.length > 0 ?\n                        <div className=\"cross_icon\" onClick={props.removeInputVal}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"22\" viewBox=\"0 0 22 22\">\n                                <g fill=\"none\" fillRule=\"evenodd\">\n                                    <path fill=\"#BDBDBD\" d=\"M11 21C5.477 21 1 16.523 1 11S5.477 1 11 1s10 4.477 10 10-4.477 10-10 10zm.95-10l2.853-2.852a.672.672 0 10-.95-.951L11 10.049 8.148 7.197a.672.672 0 10-.951.95L10.049 11l-2.852 2.852a.672.672 0 00.95.951L11 11.951l2.852 2.852a.672.672 0 10.951-.95L11.951 11z\"></path>\n                                    <path d=\"M0 0H22V22H0z\"></path>\n                                </g>\n                            </svg>\n                        </div>\n                    :\n                    <div className=\"search_icon\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"22\" viewBox=\"0 0 22 22\">\n                            <g fill=\"none\" fillRule=\"evenodd\">\n                                <path fill=\"#9E9E9E\" fillRule=\"nonzero\" d=\"M18.465 17.319l-3.728-3.81a6.13 6.13 0 001.484-3.995c0-3.426-2.838-6.214-6.325-6.214-3.488 0-6.325 2.788-6.325 6.214 0 3.426 2.837 6.214 6.325 6.214 1.309 0 2.557-.388 3.623-1.124l3.757 3.838c.157.16.368.249.595.249.214 0 .417-.08.571-.226a.801.801 0 00.023-1.146zM9.895 4.92c2.578 0 4.676 2.06 4.676 4.593s-2.098 4.593-4.675 4.593c-2.578 0-4.675-2.06-4.675-4.593s2.097-4.593 4.675-4.593z\"></path>\n                                <path d=\"M0 0H22V22H0z\"></path>\n                            </g>\n                        </svg>\n                    </div>\n                }\n            </div>\n        </>\n    )\n}\nexport default InputSearchView","import React, { useState, useRef, useEffect } from 'react'\nimport {} from '../SearchPage/Search.css'\nimport JsonSearchData from './SearchData.json'\nimport SearchItems from './SearchItems'\nimport InputSearchView from './InputSearchView'\nconst SearchMain = () => {\n    const searchFocus = useRef(null)\n    const [filterSearchData, setSearchDataFun] = useState(JsonSearchData);\n    const [wordEnter, wordEnterFun] = useState(\"\");\n    const InputValueChange = (valInput) => {\n        const searchText = valInput.target.value.toLowerCase();\n        wordEnterFun(searchText);\n        const newSearchData = JsonSearchData.filter((value) => {\n            const findState = value.statename.toLowerCase();\n            return findState.includes(searchText);\n        });\n        \n        // searchText === \"\" ? setSearchDataFun([]) : setSearchDataFun(newSearchData);\n        setSearchDataFun(newSearchData);\n    }\n    const removeInputVal = () => {\n        setSearchDataFun(JsonSearchData);\n        wordEnterFun(\"\");\n        searchFocus.current.focus();\n    }\n    const hoverText = (hoverVal) => {\n        wordEnterFun(hoverVal);\n        searchFocus.current.focus();\n    }\n\n    useEffect(() => {\n        searchFocus.current.focus();\n    }, [])\n\n    return(\n        <div className=\"search_main\">\n            <div className=\"indian_sta\">Type.. any state name of India.</div>\n            <div className=\"relative\">\n\n                <InputSearchView \n                    InputValChange={InputValueChange}\n                    removeInputVal={removeInputVal}\n                    inputSetValue={wordEnter}\n                    searchFocus={searchFocus}>\n                 </InputSearchView>\n\n                <SearchItems \n                    searchItemsData={filterSearchData}\n                    onHover={hoverText}>\n                </SearchItems>\n                \n            </div>\n            {\n                wordEnter.length > 0 && filterSearchData.length === 0 ?\n                    <>\n                        <div className=\"show_error\">No Result Found :(</div>\n                    </>\n                : false\n            }\n        </div>\n    )\n}\n\n\nexport default SearchMain","import { useRef, useEffect } from \"react\"\n\nconst EditTodoModal = (props) => {\n    const textAraFocus = useRef(null)\n\n    useEffect(() => {\n        textAraFocus.current.focus();\n    }, [])\n    return (\n        <>\n            <div className=\"flex edit_main\">\n                <input className=\"edit_val\" ref={textAraFocus} onChange={props.editTodoValue} onKeyDown={props.textareaEnter} type=\"text\" defaultValue={props.todoObj.listName} />\n                <div className=\"flex ctn_items\">\n                    <div className=\"save_btn pointer\" onClick={props.saveEditValue}>Save</div>\n                    <div className=\"cancel_btn pointer\" onClick={props.removeEditText}>Cancel</div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default EditTodoModal\n","import EditTodoModal from \"./EditTodoModal\"\n\nexport const TodoItems = (props) => {\n    return(\n        <>\n            {\n                props.allTodoList.map((todoListObj, i) =>{\n                    return(\n                        <div className={`flex added_items ${todoListObj.isDone ? 'marked_done' : ''} ${props.editTxtField.id === todoListObj.id ? 'active_box' : ''}`} key={todoListObj.id}>\n                            <>\n                                {props.editTxtField.id !== todoListObj.id &&\n                                    <>\n                                        <div className=\"flex align-v-center\">\n                                            <div className=\"relative\">\n                                                <input className=\"pointer def_check\" checked={todoListObj.isDone ? true : false} type=\"checkbox\" onChange={() => props.markRead(todoListObj)} />\n                                                <div className=\"check\"></div>\n                                            </div>\n                                            <div className=\"task_name\">{todoListObj.listName}</div>\n                                        </div>\n                                        <div className=\"flex right_icons\">\n                                            <div className=\"flex pointer edit_icon\" onClick={(targetElement) => props.editItems(todoListObj, targetElement)}>\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"#44b8e4\">\n                                                    <path d=\"M1.438 16.872l-1.438 7.128 7.127-1.438 12.642-12.64-5.69-5.69-12.641 12.64zm2.271 2.253l-.85-.849 11.141-11.125.849.849-11.14 11.125zm20.291-13.436l-2.817 2.819-5.69-5.691 2.816-2.817 5.691 5.689z\" />\n                                                </svg>\n                                            </div>\n                                            <div className=\"remove_item flex pointer\" onClick={() => props.removeItems(todoListObj.id)}>\n                                                <svg xmlns='http://www.w3.org/2000/svg' width='22' height='22' \n                                                    viewBox='0 0 24 24' fill='none' stroke='#ff3d46' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round'>\n                                                    <polyline points='3 6 5 6 21 6' />\n                                                    <path d='M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2' />\n                                                    <line x1='10' y1='11' x2='10' y2='17' />\n                                                    <line x1='14' y1='11' x2='14' y2='17' />\n                                                </svg>\n                                            </div>\n                                        </div>\n                                    </>\n                                }\n                                {props.editTxtField.id === todoListObj.id &&\n                                    <EditTodoModal\n                                        todoObj={todoListObj}\n                                        editTodoValue={props.editTodoValue}\n                                        saveEditValue={props.saveEditValue}\n                                        textareaEnter={props.textareaEnter}\n                                        removeEditText={props.removeEditText}>\n                                    </EditTodoModal>\n                                }\n                            </>\n                        </div>\n                    )\n                })\n            }\n        </>\n    )\n}","export const ToDoTextFiled = (props) => {\n    return (\n        <div className=\"input_add relative\">\n            <input \n                onChange={props.inputType}\n                onKeyDown={props.keyCheck}\n                value={props.textAreaVal}\n                ref={props.inputFocus}\n                type=\"text\" \n                placeholder=\"Add New Task\" />\n\n            <div className={`add_btn pointer ${props.textAreaVal.length > 0 ? \"active_cta\" : \"\"}`}\n                onClick={props.addItems}>\n                +\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nconst arrayTabs = [\"All\", \"Active\", \"Completed\"];\nexport const TodoTabs = (props) => {\n    return (\n        <div className=\"cta_action flex\"> \n            <div className=\"pending_task\">{props.allCount} items left</div>\n            <div className=\"flex\">\n                {\n                    arrayTabs.map((tabsName, index) =>{\n                        return(\n                            <div key={index} onClick={() => props.todoTabsToggle(index)} className={\n                                    `tabs_todo pointer cta_btns \n                                        ${props.classTabs === index ? \"active_tabs\" : \"\"}\n                                    `\n                                }>\n\n                                {tabsName}\n                                <span className=\"item_count\">{index === 0 ? props.allCount : index === 1 ? props.activeCount : props.completeCount}</span>\n                            </div>\n                        )       \n                    })\n                }\n            </div>\n            <div className=\"clear_items pointer\" onClick={() => props.clearAll()}>Clear All</div>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useReducer, useRef } from 'react'\nimport {} from './Todo.css'\nimport {TodoItems} from './TodoItems'\nimport {ToDoTextFiled} from './ToDoTextFiled';\nimport {TodoTabs} from './TodoTabs';\nimport {TodoDefaultData} from './TodoDefaultData';\n\nconst todoActionsType = {\n    ADD_ITEMS: \"ADD_ITEMS\",\n    REMOVE_ITEMS: \"REMOVE_ITEMS\",\n    EDIT_ITEMS: \"EDIT_ITEMS\",\n    DONE_ITEMS: \"DONE_ITEMS\",\n    REMOVE_ALL_ITEMS: \"REMOVE_ALL_ITEMS\",\n    TOGGLE_TABS: \"TOGGLE_TABS\",\n    COMPLETE_ITEMS: \"COMPLETE_ITEMS\",\n    REMOVEITEM: \"REMOVEITEM\",\n    HIDE_EDIT: \"HIDE_EDIT\",\n    EDIT_VALUE_UPDATE: \"EDIT_VALUE_UPDATE\",\n    SAVE_EDIT_VALUE: \"SAVE_EDIT_VALUE\"\n}\n\nconst todoDefaultStates = {\n    todoAllData: TodoDefaultData(),\n    inputValue: \"\",\n    editeTextField: \"\",\n    editItemObj: \"\",\n    classTabs: 0,\n    todoCount: 0\n}\n\nconst todoReducer = (todoState, todoAction) =>{\n    switch (todoAction.type) {\n        case \"GET_VAL\":\n            return {\n                ...todoState, \n                inputValue : todoAction.inputTextValue\n            };\n        case todoActionsType.ADD_ITEMS:            \n            return {\n                ...todoState,\n                todoAllData: [\n                  ...todoState.todoAllData,\n                    { \n                        id: new Date().getTime().toString(), \n                        listName: todoState.inputValue, \n                        isDone : false, \n                        isRemove : false\n                    },\n                ],\n                inputValue: \"\",\n              }\n        case todoActionsType.REMOVE_ALL_ITEMS:            \n            return {\n                ...todoState,\n                todoAllData: []\n            }\n        case todoActionsType.TOGGLE_TABS:\n            return {\n                ...todoState,\n                classTabs : todoAction.classTabsIndex,\n                inputValue: \"\",\n            }\n        case todoActionsType.COMPLETE_ITEMS:\n            return {\n                ...todoState,\n                todoAllData: todoAction.markedReadData\n              }\n        case todoActionsType.REMOVEITEM:\n            return {\n                ...todoState,\n                todoAllData: todoAction.removeItem\n            }\n        case todoActionsType.EDIT_ITEMS:\n            return {\n                ...todoState,\n                editItemObj : todoAction.editItemObj,\n                editeTextField : todoAction.editeTextField\n            }\n        case todoActionsType.HIDE_EDIT:\n            return {\n                ...todoState,\n                editItemObj: \"\"\n            }\n        case todoActionsType.EDIT_VALUE_UPDATE:\n            return {\n                ...todoState,\n                editeTextField : todoAction.editeTextField\n            }\n        case todoActionsType.SAVE_EDIT_VALUE:\n            todoState.todoAllData.filter((saveValue) => {\n                if(saveValue.id === todoState.editItemObj.id){\n                    saveValue.listName = todoState.editeTextField;\n                }\n                return saveValue\n            });\n            return {\n                ...todoState,\n                editItemObj: \"\",\n            }\n        default:\n            return {...todoState}\n    }\n}\n\nconst TodoMain = () => {\n    const inputFocus = useRef(false);\n    const [todoCurrentData, todoDataUpdate] = useReducer(todoReducer, todoDefaultStates)\n    \n    const inputOnType = (event) => {\n        const getInputValue = {\n            type: \"GET_VAL\",\n            inputTextValue : event.target.value\n        }\n        todoDataUpdate(getInputValue)\n    }\n\n    const addItemsMethod = () =>{\n        todoDataUpdate({\n            type: todoActionsType.ADD_ITEMS\n        })\n    }\n\n    const addItemBtn = () => {\n        if(todoCurrentData.inputValue.length > 0){\n            addItemsMethod()\n        }else{\n            alert(\"Input can't be blank!\")\n            inputFocus.current.focus();\n        }\n    }\n    \n    const keyTypeCheck = (event) => {\n        if(event.key === \"Enter\" && todoCurrentData.inputValue.length > 0){\n            addItemsMethod()\n        }\n    }\n    \n    const todoTabsToggle = (index) =>{\n        todoDataUpdate({\n            type: todoActionsType.TOGGLE_TABS,\n            classTabsIndex : index\n        })\n    }\n\n    const clearAll = () =>{\n        const confirmRemove = window.confirm(\"Are You Sure?\");\n        if(confirmRemove){\n            todoDataUpdate({\n                type: todoActionsType.REMOVE_ALL_ITEMS\n            })\n        }\n    }\n\n    const activeCount = todoCurrentData.todoAllData.filter((activeCount) => {\n        return !activeCount.isDone\n    })\n\n    const completeCount = todoCurrentData.todoAllData.filter((completeCount) => {\n        return completeCount.isDone\n    })\n\n    const markAsDone = (itemObj) => {\n        const markedReadData = todoCurrentData.todoAllData.filter((markedRead) => {\n            if(markedRead.id === itemObj.id){\n                !markedRead.isDone ? markedRead.isDone = true : markedRead.isDone = false;\n            }\n            return markedRead;\n        })\n\n        todoDataUpdate({\n            type: todoActionsType.COMPLETE_ITEMS,\n            markedReadData: markedReadData\n        })\n    }\n\n    const removeSelectedItems = (targetTodoItem) => {\n        const restTodoData = todoCurrentData.todoAllData.filter((todoNew) =>{\n            return todoNew.id !== targetTodoItem;\n        })\n        \n        todoDataUpdate({\n            type: todoActionsType.REMOVEITEM,\n            removeItem: restTodoData\n        })\n    }\n\n    const editTodoItems = (editObj) => {\n        todoDataUpdate({\n            type: todoActionsType.EDIT_ITEMS,\n            editeTextField : editObj.listName,\n            editItemObj : editObj\n        })\n    }\n\n    const closeEditModal = () =>{\n        todoDataUpdate({\n            type: todoActionsType.HIDE_EDIT\n        })\n    }\n\n    const saveEditData = () => {\n        todoDataUpdate({\n            type: todoActionsType.SAVE_EDIT_VALUE,\n        })\n    }\n\n    const textareaEnterPress = (event) => {\n        if (event.key === \"Enter\" || event.key === \"Escape\") {\n            todoDataUpdate({\n                type: todoActionsType.SAVE_EDIT_VALUE,\n            })\n        }\n    }\n\n    const newEditValue = (event) => {\n        if (event.target.value) {\n            todoDataUpdate({\n                type: todoActionsType.EDIT_VALUE_UPDATE,\n                editeTextField : event.target.value\n            })\n        }   \n    }\n\n    localStorage.setItem(\"allTodoData\", JSON.stringify(todoCurrentData.todoAllData));\n\n    return(\n        <div className=\"todo_main\">\n            <div className=\"todo_text\">Add Your Todo List</div>\n            <ToDoTextFiled\n                inputType={inputOnType}\n                textAreaVal={todoCurrentData.inputValue}\n                keyCheck={keyTypeCheck}\n                inputFocus={inputFocus}\n                addItems={addItemBtn}>\n            </ToDoTextFiled>\n            \n            {todoCurrentData.todoAllData && \n                <div className={`all_todo ${todoCurrentData.classTabs === 1 ? 'active_items_show' : todoCurrentData.classTabs === 2 ? 'complete_items_show' : ''}`}>\n                    <TodoItems\n                        allTodoList={todoCurrentData.todoAllData}\n                        editTxtField={todoCurrentData.editItemObj}\n                        markRead={markAsDone}\n                        removeItems={removeSelectedItems}\n                        editItems={editTodoItems}\n                        removeEditText={closeEditModal}\n                        editTodoValue={newEditValue}\n                        saveEditValue={saveEditData}\n                        textareaEnter={textareaEnterPress}>\n                    </TodoItems>\n                </div>\n            }\n\n            {todoCurrentData.todoAllData.length < 1 && \n                <div className=\"no_todo\">Your todo will appear here</div>\n            }\n\n            {todoCurrentData.todoAllData.length > 0 &&                \n                <TodoTabs\n                    allCount={todoCurrentData.todoAllData.length}\n                    classTabs={todoCurrentData.classTabs}\n                    todoTabsToggle={todoTabsToggle}\n                    clearAll={clearAll}\n                    activeCount={activeCount.length}\n                    completeCount={completeCount.length}>\n                </TodoTabs>\n            }\n        </div>\n    )\n}\nexport default TodoMain","export const TodoDefaultData = () =>{\n    const todoLS = localStorage.getItem(\"allTodoData\");\n    if(todoLS){\n        return JSON.parse(todoLS);\n    }else{\n        return [\n            {\n                id : \"1\",\n                listName : \"Task 1\",\n                isDone : false,\n                isRemove : false,\n            },\n            {\n                id : \"2\",\n                listName : \"Task 2\",\n                isDone : false,\n                isRemove : false,\n            },\n            {\n                id : \"3\",\n                listName : \"Task 3\",\n                isDone : false,\n                isRemove : false,\n            },\n            {\n                id : \"4\",\n                listName : \"Task 4\",\n                isDone : true,\n                isRemove : false,\n            },\n            {\n                id : \"5\",\n                listName : \"Task 5\",\n                isDone : false,\n                isRemove : false,\n            },\n            {\n                id : \"6\",\n                listName : \"Task 6\",\n                isDone : true,\n                isRemove : false,\n            }\n        ];\n    }\n}\n","import React, {useState} from 'react'\nimport BoxData from './BoxData.json'\nimport {} from './Box.css'\n\nfunction BoxItems() {\n    const [isSelected, setIsSelected] = useState(true);\n    const boxClick = (event) => {\n        setIsSelected(isSelected === event ? false : event);\n    }\n\n    \n    return (\n        <div className=\"boxes_main\">\n            {  \n                BoxData.map((boxItem, boxId) =>{\n                    return(\n                        <div className={`accor_main`} key={boxId}>\n                            <div className={`flex pointer`} onClick={() => boxClick(boxId)}>\n                                <div className={``}>{boxItem.title}</div>\n                                <div className={`acoor_icon ${isSelected === boxId ? \"rotate_aero\" : \"\"}`}>\n                                    +\n                                </div>\n                            </div>\n\n                            <div className={`accod_content ${isSelected === boxId  ? \"show_content\" : \"\"}`}>\n                                <span className=\"highligh_title\">\n                                    Title {boxId}\n                                </span> \n                                 {boxItem.content}\n                            </div>\n                            \n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default BoxItems\n","const ShopingItem = (props) => {\n    return(\n        <div className=\"product_list\">\n            {\n                props.ShopingData.map((data) => {\n                    const {id, image, name, old_price, price, dexcription} = data;                    \n                    return(\n                        <div className=\"item_main\" key={id}>\n                            <div className=\"relative\">\n                                <img className=\"prod_img\" src={image} alt={dexcription}/>\n                                {/* <div className=\"fav_icons pointer\">\n                                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <g fill=\"none\" fillRule=\"evenodd\">\n                                            <path d=\"M0 0h24v24H0z\"></path>\n                                            <path d=\"M16.665 3.286C20.002 3.286 22 5.239 22 8.509c0 2.678-2.455 4.922-2.556 5.022l-6.953 6.697a.692.692 0 0 1-.491.2.692.692 0 0 1-.491-.2l-6.964-6.72c-.09-.077-2.545-2.32-2.545-5 0-3.27 1.998-5.222 5.335-5.222 1.953 0 3.783 1.54 4.665 2.41.882-.87 2.712-2.41 4.665-2.41z\" stroke=\"#fffbfb\" strokeWidth=\"1.5\"></path>\n                                        </g>\n                                    </svg>\n                                </div> */}\n                            </div>\n                            <div className=\"prod_details\">\n                                <div className=\"item_name\">{name}</div>\n                                <div className=\"item_desc\">{dexcription}</div>\n                                <div className=\"flex\">\n                                    <div className=\"item_price\">{price} </div>\n                                    <div className=\"item_old_price\">{old_price}</div>\n                                </div>\n                                {\n                                    props.itemsObjId.includes(id) ? \n                                        <div className=\"add_item remove_items pointer\" onClick={() => props.removeFromCart(data.id)}>Remove From Cart</div>\n                                    : <div className=\"add_item pointer\" onClick={() => props.addToCart(data, data.id)}>Add To Cart</div>\n                                }\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default ShopingItem","import React, { useContext, useState, useEffect} from 'react'\nimport ShopingDataJson from './ShopingListData.json'\nimport ShopingItem from './ShopingItem'\nimport {} from '../ShopingCart/Shoping.css'\nimport { CartDataContext } from '../../Context/CartDataContext'\n\nconst ShopingMain = () => {\n    const {setCartItemCount, shopingItems} = useContext(CartDataContext);\n    const [shopingData, setShopingData] = useState(shopingItems);\n    const [allState] = useState(\n        {\n            currentItem: null,\n            itemsObjId: []\n        }\n    )\n    \n\n    const shopingDataObj = () =>{\n        \n        const {id, name, price, old_price, image, dexcription} = allState.currentItem;\n\n        setShopingData(\n            [\n                {\n                    itemId : id,\n                    itemName : name,\n                    itemPrice : price,\n                    itemOldPrice : old_price,\n                    itemImage : image,\n                    itemDesc : dexcription,\n                    quantity : 1\n                },\n                ...shopingData\n            ]\n        )\n    }\n\n    const addToCart = (items, id) => {\n        allState.currentItem = items;\n        shopingDataObj();\n        allState.itemsObjId.push(id);\n        // setCartItemCount(shopingData.length);\n    }\n\n    useEffect(() => {\n        setCartItemCount(shopingData.length);\n\n    }, [shopingData])\n\n    // setTimeout(() => {\n    //     setCartItemCount(shopingData.length)\n    // }, 1);\n\n    const removeFromCart = (id) => {\n        const removeItem = shopingData.filter((remvItems) =>{\n            return remvItems.itemId !== id;\n        })\n        setShopingData(removeItem);\n    }\n\n    localStorage.setItem(\"allShopingData\", JSON.stringify(shopingData));\n\n    return (\n        <div className=\"all_shoping_content\">\n            <ShopingItem\n                ShopingData={ShopingDataJson}\n                addToCart={addToCart}\n                itemsObjId={allState.itemsObjId}\n                removeFromCart={removeFromCart}\n            >\n            </ShopingItem>\n        </div>\n    )\n}\n\nexport default ShopingMain\n","function ShopingCart() {\n    return (\n        <div className={`cart_main`}>\n            Lorem ipsum dolor, sit amet consectetur adipisicing elit. Molestiae, quibusdam doloremque velit tempore sit incidunt necessitatibus officia voluptates odit laudantium ullam hic nobis voluptatum! Voluptatum voluptates delectus asperiores dolores quasi?\n            Lorem ipsum dolor, sit amet consectetur adipisicing elit. Molestiae, quibusdam doloremque velit tempore sit incidunt necessitatibus officia voluptates odit laudantium ullam hic nobis voluptatum! Voluptatum voluptates delectus asperiores dolores quasi?\n        </div>\n    )\n}\n\nexport default ShopingCart\n","import './Main.css';\nimport Header from './Components/Header/Menu';\nimport TabsMain from './Components/Tabs/TabsMain'\nimport Example2 from './Components/SearchPage/SearchMain';\nimport Example3 from './Components/TodoPage/TodoMain'\nimport Example4 from './Components/Accordion/BoxItems'\nimport ShopingMain from './Components/ShopingCart/ShopingMain'\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { DataToSendFun } from './Context/CartDataContext';\nimport ShopingCart from './Components/ShopingCart/ShopingCart';\nfunction App() {\n  return (\n    <>\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <DataToSendFun>\n            <Header></Header>\n            <div className=\"main_container\">\n              <Switch>\n                  <Route exact path='/' component={Example3}></Route>\n                  <Route exact path='/TabsMain' component={TabsMain}></Route>\n                  <Route exact path='/SearchPage' component={Example2}></Route>\n                  <Route exact path='/Accordion' component={Example4}></Route>\n                  <Route exact path='/ShopingCart' component={ShopingMain}></Route>\n              </Switch>\n            </div>\n            <ShopingCart />\n        </DataToSendFun>\n    </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import {HashRouter as Router} from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Router> */}\n      <App />\n    {/* </Router> */}\n  </React.StrictMode>,\n  document.getElementById('main')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}