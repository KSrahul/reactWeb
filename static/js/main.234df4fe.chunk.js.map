{"version":3,"sources":["Components/Header/logo.svg","Components/Header/Menu.jsx","Components/Tabs/TabsContent.jsx","Components/Tabs/TabsMenu.jsx","Components/Tabs/TabsMain.jsx","Components/SearchPage/SearchItems.jsx","Components/SearchPage/InputSearchView.jsx","Components/SearchPage/SearchMain.jsx","Components/TodoPage/EditTodoModal.jsx","Components/TodoPage/TodoItems.jsx","Components/TodoPage/ToDoTextFiled.jsx","Components/TodoPage/TodoMain.jsx","Components/Accordion/BoxItems.js","Context/CartDataContext.jsx","Components/ShopingCart/ShopingItem.jsx","Components/ShopingCart/ShopingMain.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Menu","useState","openHame","setOpenHame","menuClick","className","src","logo","width","alt","onClick","fill","viewBox","xmlns","d","id","exact","activeClassName","to","TabsContent","props","TabContent","map","element","index","activeContent","tab_content","TabsMenu","allTabsData","tabsMenu","tab_text","classActiveCheck","clickTabs","FilterTabs","classActiveFun","indexNum","console","log","target","getBoundingClientRect","SearchItems","searchItemsData","length","searchItes","onMouseOver","onHover","statename","InputSearchView","ref","searchFocus","onChange","InputValChange","value","inputSetValue","type","placeholder","removeInputVal","height","fillRule","SearchMain","useRef","JsonSearchData","filterSearchData","setSearchDataFun","wordEnter","wordEnterFun","useEffect","current","focus","valInput","searchText","toLowerCase","newSearchData","filter","includes","hoverVal","EditTodoModal","textAraFocus","editTodoValue","onKeyDown","textareaEnter","defaultValue","todoObj","listName","saveEditValue","removeEditText","TodoItems","allTodoList","todoListObj","i","isDone","editTxtField","draggable","onDragStart","startDragging","onDragOver","endDraging","checked","markRead","targetElement","editItems","removeItems","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","ToDoTextFiled","inputType","keyCheck","textAreaVal","inputFocus","addItems","arrayTabs","TodoMain","todoLS","localStorage","getItem","JSON","parse","isRemove","getTodoFromLS","toDoDataObject","setToDoObject","inputValue","editeTextField","editItemObj","classTabs","allState","setAllState","activeAllTab","allKeys","todoDataObj","Date","getTime","toString","itemsCount","allItemsCount","saveEditData","event","editedTodoData","editedData","setItem","stringify","filterActiveCount","filterCompleteount","currentVal","key","alert","targetTodoItem","restTodoData","todoNew","itemObj","markedReadData","markedRead","editObj","checkVisibility","tabsName","name","todoTabsFun","window","confirm","BoxItems","isSelected","setIsSelected","BoxData","boxItem","boxId","title","content","CartDataContext","createContext","DataToSendFun","shopingData","cartItemsData","Provider","children","ShopingItem","ShopingData","data","image","old_price","price","dexcription","itemsObjId","removeFromCart","addToCart","ShopingMain","useContext","getShopingData","shopingDataFun","currentItem","allIds","allItems","itemId","ShopingDataJson","items","itemName","itemPrice","itemOldPrice","itemImage","itemDesc","quantity","shopingDataObj","string","String","removeItem","remvItems","App","basename","process","path","component","Example3","TabsMain","Example2","Example4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.234df4fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.09ffbc1b.svg\";","import logo from './logo.svg';\nimport {} from './navbar.css';\nimport {NavLink} from 'react-router-dom'\nimport { useState } from 'react';\n\nconst Menu = () => {\n    const [openHame, setOpenHame] = useState(false)\n    const openHamMenu = () =>{\n        setOpenHame(!openHame);\n    }\n\n    const menuClick = () =>{\n        setOpenHame(false);\n    }\n    return (\n        <>\n            <style>\n                {\n                `\n                    .main_container{margin-top: 90px;color: black;}\n                    .logo_cen{text-align: center;padding-top: 10px;}\n                    .hamburger_icon{margin-right: 20px;}\n                    .ham_menus_list{position: fixed;top: 0;width: 100%;left: 0;height: 100%;background-color: white;transform: translateY(-100%);z-index: 9;overflow: hidden;}\n                    .show_ham_menus{transform: translateY(0%);transition: 0.4s;}\n                    .hamburger_icon{z-index: 10;}\n                    .ham_cross > svg{fill: red;}\n                    .hamburger_icon > svg > path{transition: 0.4s;}\n                    .ham_cross > svg > #hamone{transform: rotate(21deg) translateY(0px) translateX(16px);}\n                    .ham_cross > svg > #hamtwo{transform: rotate(-25deg) translateY(23px) translateX(-39px);}\n                    .ham_cross > svg > #hamthree{display:none;}\n                `   \n                }\n            </style>\n            <div className=\"flex header_main\">\n                <div>\n                    <img src={logo} width=\"100\" alt=\"logo\" />\n                </div>\n                <div className={`pointer hamburger_icon relative ${openHame ? \"ham_cross\" : \"\"}`} onClick={openHamMenu}>\n                    <svg fill=\"white\" width=\"40px\" viewBox=\"0 0 128 128\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M64,128a64,64,0,1,1,64-64A64.07,64.07,0,0,1,64,128ZM64,4a60,60,0,1,0,60,60A60.07,60.07,0,0,0,64,4Z\"/>\n                        <path id=\"hamone\" d=\"M95,44H33a2,2,0,0,1,0-4H95a2,2,0,0,1,0,4Z\"/>\n                        <path id=\"hamtwo\" d=\"M95,66H33a2,2,0,0,1,0-4H95a2,2,0,0,1,0,4Z\"/>\n                        <path id=\"hamthree\" d=\"M95,88H33a2,2,0,0,1,0-4H95a2,2,0,0,1,0,4Z\"/>\n                    </svg>\n                </div>\n                \n                <div className={`ham_menus_list ${openHame ? \"show_ham_menus\" : \"\"}`}>\n                    <ul className=\"flex menu_list\">\n                        <li>\n                            <NavLink exact\n                                onClick={menuClick}\n                                activeClassName=\"active_menu\"\n                                to=\"/\">\n                                Todo App\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink exact\n                                onClick={menuClick}\n                                activeClassName=\"active_menu\"\n                                to=\"/TabsMain\">\n                                Custom Tabs\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink exact\n                                onClick={menuClick}\n                                activeClassName=\"active_menu\"\n                                to=\"/SearchPage\">\n                                Search Items\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink exact\n                                onClick={menuClick}\n                                activeClassName=\"active_menu\"\n                                to=\"/Accordion\">\n                                Accordion\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink exact\n                                onClick={menuClick}\n                                activeClassName=\"active_menu\"\n                                to=\"/ShopingCart\">\n                                Shopping Cart\n                            </NavLink>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Menu;","import React from 'react'\n\nconst TabsContent = (props) => {\n    return (\n        <div className=\"items_main\">\n            {\n                props.TabContent.map((element, index) => {\n                    return(\n                        props.activeContent === index ?\n                            <div key={index} className=\"items_divs\">\n                                {element.tab_content}\n                            </div>\n                        : false\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default TabsContent\n","import React from 'react'\n\nexport const TabsMenu = (props) => {\n    return (\n        <>\n            <div className=\"tabs_raw\">\n                {\n                    props.allTabsData.map((tabsMenu, index) => {\n                        const {id, tab_text} = tabsMenu;\n                        return(\n                            <div key={id}\n                                className={\n                                    `tabsLink ${props.classActiveCheck === index ? \"activeTabs\" : \"\"}`\n                                }\n                                onClick={(element) => props.clickTabs(element, index)}\n                            >\n                                {tab_text}\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"div_slide\"></div>\n        </>\n    )\n}\n","import allTabsData from './TabsData';\nimport {} from './Tab.css'\nimport { useState } from 'react';\nimport TabsContent from './TabsContent';\nimport { TabsMenu } from './TabsMenu';\n\nconst FilterTabs = () => {\n    const [classActiveCheck, classActiveFun] = useState(0);\n    const clickTabs = (element, indexNum) => {\n        classActiveFun(indexNum);\n        console.log(element.target.getBoundingClientRect())\n    }\n    return(\n        <div className=\"tabs_boxes_container\">\n            <TabsMenu \n                allTabsData={allTabsData} \n                classActiveCheck={classActiveCheck} \n                clickTabs={clickTabs} \n            />\n            \n            <TabsContent \n                TabContent={allTabsData} \n                activeContent={classActiveCheck} \n            />\n        </div>\n    )\n}\n\nexport default FilterTabs;","const SearchItems = (props) => {\n    return(\n        <>\n            {\n                props.searchItemsData.length > 0 ?\n                    <div className=\"search_content\">\n                        {\n                            props.searchItemsData.map((searchItes, index) => {\n                                return(\n                                    <div key={index} className=\"searchItem\" \n                                        onMouseOver={() => props.onHover(searchItes.statename)}>\n                                        {searchItes.statename}\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                :false\n            }\n        </>\n    )\n}\n\nexport default SearchItems","const InputSearchView = (props) => {\n    return(\n        <> \n            <input ref={props.searchFocus} onChange={props.InputValChange} value={props.inputSetValue} className=\"search_input\" type=\"text\" placeholder=\"Search your state, e.g Haryana\" />\n            <div className=\"search_pop_icon\">\n                {\n                    props.inputSetValue.length > 0 ?\n                        <div className=\"cross_icon\" onClick={props.removeInputVal}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"22\" viewBox=\"0 0 22 22\">\n                                <g fill=\"none\" fillRule=\"evenodd\">\n                                    <path fill=\"#BDBDBD\" d=\"M11 21C5.477 21 1 16.523 1 11S5.477 1 11 1s10 4.477 10 10-4.477 10-10 10zm.95-10l2.853-2.852a.672.672 0 10-.95-.951L11 10.049 8.148 7.197a.672.672 0 10-.951.95L10.049 11l-2.852 2.852a.672.672 0 00.95.951L11 11.951l2.852 2.852a.672.672 0 10.951-.95L11.951 11z\"></path>\n                                    <path d=\"M0 0H22V22H0z\"></path>\n                                </g>\n                            </svg>\n                        </div>\n                    :\n                    <div className=\"search_icon\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"22\" viewBox=\"0 0 22 22\">\n                            <g fill=\"none\" fillRule=\"evenodd\">\n                                <path fill=\"#9E9E9E\" fillRule=\"nonzero\" d=\"M18.465 17.319l-3.728-3.81a6.13 6.13 0 001.484-3.995c0-3.426-2.838-6.214-6.325-6.214-3.488 0-6.325 2.788-6.325 6.214 0 3.426 2.837 6.214 6.325 6.214 1.309 0 2.557-.388 3.623-1.124l3.757 3.838c.157.16.368.249.595.249.214 0 .417-.08.571-.226a.801.801 0 00.023-1.146zM9.895 4.92c2.578 0 4.676 2.06 4.676 4.593s-2.098 4.593-4.675 4.593c-2.578 0-4.675-2.06-4.675-4.593s2.097-4.593 4.675-4.593z\"></path>\n                                <path d=\"M0 0H22V22H0z\"></path>\n                            </g>\n                        </svg>\n                    </div>\n                }\n            </div>\n        </>\n    )\n}\nexport default InputSearchView","import React, { useState, useRef, useEffect } from 'react'\nimport {} from '../SearchPage/Search.css'\nimport JsonSearchData from './SearchData.json'\nimport SearchItems from './SearchItems'\nimport InputSearchView from './InputSearchView'\nconst SearchMain = () => {\n    const searchFocus = useRef(null)\n    const [filterSearchData, setSearchDataFun] = useState(JsonSearchData);\n    const [wordEnter, wordEnterFun] = useState(\"\");\n    const InputValueChange = (valInput) => {\n        const searchText = valInput.target.value.toLowerCase();\n        wordEnterFun(searchText);\n        const newSearchData = JsonSearchData.filter((value) => {\n            const findState = value.statename.toLowerCase();\n            return findState.includes(searchText);\n        });\n        \n        // searchText === \"\" ? setSearchDataFun([]) : setSearchDataFun(newSearchData);\n        setSearchDataFun(newSearchData);\n    }\n    const removeInputVal = () => {\n        setSearchDataFun(JsonSearchData);\n        wordEnterFun(\"\");\n        searchFocus.current.focus();\n    }\n    const hoverText = (hoverVal) => {\n        wordEnterFun(hoverVal);\n        searchFocus.current.focus();\n    }\n\n    useEffect(() => {\n        searchFocus.current.focus();\n    }, [])\n\n    return(\n        <div className=\"search_main\">\n            <div className=\"indian_sta\">Type.. any state name of India.</div>\n            <div className=\"relative\">\n\n                <InputSearchView \n                    InputValChange={InputValueChange}\n                    removeInputVal={removeInputVal}\n                    inputSetValue={wordEnter}\n                    searchFocus={searchFocus}>\n                 </InputSearchView>\n\n                <SearchItems \n                    searchItemsData={filterSearchData}\n                    onHover={hoverText}>\n                </SearchItems>\n                \n            </div>\n            {\n                wordEnter.length > 0 && filterSearchData.length === 0 ?\n                    <>\n                        <div className=\"show_error\">No Result Found :(</div>\n                    </>\n                : false\n            }\n        </div>\n    )\n}\n\n\nexport default SearchMain","import { useRef, useEffect } from \"react\"\n\nconst EditTodoModal = (props) => {\n    const textAraFocus = useRef(null)\n\n    useEffect(() => {\n        // textAraFocus.current.select();\n        textAraFocus.current.focus();\n    }, [])\n    return (\n        <>\n            <div className=\"flex edit_main\">\n                <input className=\"edit_val\" ref={textAraFocus} onChange={props.editTodoValue} onKeyDown={props.textareaEnter} type=\"text\" defaultValue={props.todoObj.listName} />\n                <div className=\"flex ctn_items\">\n                    <div className=\"save_btn pointer\" onClick={props.saveEditValue}>Save</div>\n                    <div className=\"cancel_btn pointer\" onClick={props.removeEditText}>Cancel</div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default EditTodoModal\n","import EditTodoModal from \"./EditTodoModal\"\n\nconst TodoItems = (props) => {\n    return(\n        <>\n            {\n                props.allTodoList.map((todoListObj, i) =>{\n                    return(\n                        <div className={`flex added_items ${todoListObj.isDone ? 'marked_done' : ''} ${!todoListObj.isDone && props.editTxtField.id === todoListObj.id ? 'active_box' : ''}`} key={todoListObj.id}\n                            draggable=\"true\"\n                            onDragStart={props.startDragging}\n                            onDragOver={props.endDraging}>\n                            \n                            {\n                                props.editTxtField.id !== todoListObj.id ? \n                                    <>\n                                        <div className=\"flex align-v-center\">\n                                            <div className=\"relative\">\n                                                <input className=\"pointer def_check\" checked={todoListObj.isDone ? true : false} type=\"checkbox\" onChange={() => props.markRead(todoListObj)} />\n                                                <div className=\"check\"></div>\n                                            </div>\n                                            <div className=\"task_name\">{todoListObj.listName}</div>\n                                        </div>\n                                        <div className=\"flex right_icons\">\n                                            <div className=\"flex pointer edit_icon\" onClick={(targetElement) => props.editItems(todoListObj, targetElement)}>\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"#44b8e4\">\n                                                    <path d=\"M1.438 16.872l-1.438 7.128 7.127-1.438 12.642-12.64-5.69-5.69-12.641 12.64zm2.271 2.253l-.85-.849 11.141-11.125.849.849-11.14 11.125zm20.291-13.436l-2.817 2.819-5.69-5.691 2.816-2.817 5.691 5.689z\" />\n                                                </svg>\n                                            </div>\n                                            <div className=\"remove_item flex pointer\" onClick={() => props.removeItems(todoListObj.id)}>\n                                                <svg xmlns='http://www.w3.org/2000/svg' width='22' height='22' \n                                                    viewBox='0 0 24 24' fill='none' stroke='#ff3d46' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round'>\n                                                    <polyline points='3 6 5 6 21 6' />\n                                                    <path d='M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2' />\n                                                    <line x1='10' y1='11' x2='10' y2='17' />\n                                                    <line x1='14' y1='11' x2='14' y2='17' />\n                                                </svg>\n                                            </div>\n                                        </div>\n                                    </>\n                                : false\n                            }\n                            \n                            {\n                                !todoListObj.isDone && props.editTxtField.id === todoListObj.id ?\n                                    <EditTodoModal\n                                        todoObj={todoListObj}\n                                        editTodoValue={props.editTodoValue}\n                                        saveEditValue={props.saveEditValue}\n                                        textareaEnter={props.textareaEnter}\n                                        removeEditText={props.removeEditText}>\n                                    </EditTodoModal>\n                                :false\n                            }\n                        </div>\n                    )\n                })\n            }\n        </>\n    )\n}\n\nexport default TodoItems","import React from 'react'\n\nfunction ToDoTextFiled(props) {\n    return (\n        <div className=\"input_add relative\">\n            <input \n                onChange={props.inputType}\n                onKeyDown={props.keyCheck}\n                value={props.textAreaVal}\n                ref={props.inputFocus}\n                type=\"text\" \n                placeholder=\"Add New Task\" />\n\n            <div className={`add_btn pointer ${props.textAreaVal.length > 0 ? \"active_cta\" : \"\"}`}\n                onClick={props.addItems}>\n                +\n            </div>\n        </div>\n    )\n}\n\nexport default ToDoTextFiled\n","import React, { useState, useEffect, useRef } from 'react'\nimport {} from './Todo.css'\nimport TodoItems from './TodoItems'\nimport ToDoTextFiled from './ToDoTextFiled';\n\nconst arrayTabs = [\"All\", \"Active\", \"Completed\"];\nconst getTodoFromLS = () =>{\n    const todoLS = localStorage.getItem(\"allTodoData\");\n    if(todoLS){\n        return JSON.parse(todoLS);\n    }else{\n        return [\n            {\n                id : \"1\",\n                listName : \"Task 1\",\n                isDone : false,\n                isRemove : false,\n            },\n            {\n                id : \"2\",\n                listName : \"Task 2\",\n                isDone : false,\n                isRemove : false,\n            },\n            {\n                id : \"3\",\n                listName : \"Task 3\",\n                isDone : false,\n                isRemove : false,\n            },\n            {\n                id : \"4\",\n                listName : \"Task 4\",\n                isDone : true,\n                isRemove : false,\n            }\n        ];\n    }\n}\nconst TodoMain = () => {\n    // let sourceElement = null\n    const inputFocus = useRef(false);\n    const [toDoDataObject, setToDoObject] = useState(getTodoFromLS());\n    const [allState, setAllState] = useState(\n        {\n            inputValue: \"\",\n            editeTextField: \"\",\n            editItemObj: \"\",\n            classTabs: 0,\n        }\n    )\n\n    const activeAllTab = () =>{\n        setAllState(allKeys => ({\n            ...allKeys,\n            classTabs : 0,\n        }))\n    }\n    const todoDataObj = () =>{\n        setToDoObject(\n            [\n                {\n                    id : new Date().getTime().toString(),\n                    listName : allState.inputValue,\n                    isDone : false,\n                    isRemove : false,\n                },\n                ...toDoDataObject\n            ]\n        )\n    }\n\n    const itemsCount = toDoDataObject.filter((allItemsCount) =>{\n        return !allItemsCount.isDone;\n    })\n\n    const inputOnType = (event) => {\n        const currentVal = event.target.value;\n        setAllState(allKeys => ({\n            ...allKeys,\n            inputValue : currentVal,\n        }))\n    }\n\n    const addItemBtn = () => {\n        if(allState.inputValue.length > 0){\n            todoDataObj();\n            allState.inputValue = \"\";\n            activeAllTab();\n        }else{\n            alert(\"Input can't be blank!\")\n            inputFocus.current.focus();\n        }\n    }\n\n    const keyTypeCheck = (event) => {\n        if(event.key === \"Enter\" && allState.inputValue.length > 0){\n            todoDataObj();\n            allState.inputValue = \"\";\n            activeAllTab();\n        }\n    }\n\n    const removeSelectedItems = (targetTodoItem) => {\n        const restTodoData = toDoDataObject.filter((todoNew) =>{\n            return todoNew.id !== targetTodoItem;\n        })\n        setToDoObject(restTodoData);\n    }\n\n    const markAsDone = (itemObj) => {\n        const markedReadData = toDoDataObject.filter((markedRead) => {\n            if(markedRead.id === itemObj.id){\n                markedRead.isDone === false ? \n                markedRead.isDone = true : \n                markedRead.isDone = false;\n            }\n            return markedRead;\n        })\n\n        setToDoObject(markedReadData);\n    }\n\n    const editTodoItems = (editObj) => {\n        setAllState(allKeys => ({\n            ...allKeys,\n            editeTextField : editObj.listName,\n            editItemObj : editObj,\n        }))\n    }\n\n    const newEditValue = (event) => {\n        if (event.target.value.length > 0) {\n            setAllState(allKeys => ({\n                ...allKeys,\n                editeTextField : event.target.value,\n                editItemObj : allState.editItemObj,\n            }))\n        }\n    }\n\n    const saveEditData = (event) => {\n        const editedTodoData = toDoDataObject.filter((editedData) => {\n            if (editedData.id === allState.editItemObj.id) {\n                editedData.listName = allState.editeTextField;\n            }\n            return editedData;\n        })\n        setToDoObject(editedTodoData);\n        allState.editItemObj = \"\";\n    }\n\n    const textareaEnterPress = (event) => {\n        if (event.key === \"Enter\" || event.key === \"Escape\") {\n            saveEditData();\n        }\n    }\n\n    const closeEditModal = () =>{\n        setAllState(allKeys => ({\n            ...allKeys,\n            editItemObj : \"\",\n        }))\n    }\n\n    localStorage.setItem(\"allTodoData\", JSON.stringify(toDoDataObject));\n\n    const todoTabsFun = (name, index) =>{\n        setAllState(allKeys => ({\n            ...allKeys,\n            classTabs : index\n        }))\n    }\n\n    const startDraggingItems = (event) =>{\n        console.log(event.target)\n    }\n\n    const endDragingItems = (event) =>{\n        console.log(event.target)\n    }\n\n    const filterActiveCount = toDoDataObject.filter((filterActiveCount) => {\n        return !filterActiveCount.isDone\n    })\n\n    const filterCompleteount = toDoDataObject.filter((filterCompleteount) => {\n        return filterCompleteount.isDone\n    })\n\n\n    useEffect(() => {\n        inputFocus.current.focus();\n    }, [])\n\n      return(\n          <>\n            <div className=\"todo_main\">\n                <div className=\"todo_text\">Add Your Todo List</div>\n                \n                <ToDoTextFiled\n                    inputType={inputOnType}\n                    textAreaVal={allState.inputValue}\n                    keyCheck={keyTypeCheck}\n                    inputFocus={inputFocus}\n                    addItems={addItemBtn}>\n                </ToDoTextFiled>\n\n                {\n                    toDoDataObject.length > 0 ? \n                        <div className={`all_todo ${allState.classTabs === 0 ? '' : allState.classTabs === 1 ? 'active_items_show' : 'complete_items_show'}`}>\n                            <TodoItems \n                                allTodoList={toDoDataObject}\n                                removeItems={removeSelectedItems}\n                                markRead={markAsDone}\n                                editItems={editTodoItems}\n                                checkVisibility={allState.classTabs}\n                                startDragging={startDraggingItems}\n                                endDraging={endDragingItems}\n                                editTxtField={allState.editItemObj}\n                                removeEditText={closeEditModal}\n                                editTodoValue={newEditValue}\n                                saveEditValue={saveEditData}\n                                textareaEnter={textareaEnterPress}>\n                            </TodoItems>\n                        </div>\n                    : false\n                }\n                \n                {   \n                    toDoDataObject.length < 1 ?\n                        <div className=\"no_todo\">Your todo will appear here</div>\n                    :\n                    allState.classTabs === 1 && filterActiveCount.length < 1 ? \n                        <div className=\"no_todo no_height\">No Active Items!</div>\n                    : allState.classTabs === 2 && filterCompleteount.length < 1 ?\n                        <div className=\"no_todo no_height\">No Complete Items!</div>\n                    : false\n                }\n                \n                <div className=\"cta_action flex\">\n                    <div className=\"pending_task\">\n                        {itemsCount.length} items left\n                    </div>\n                    <div className=\"flex\">\n                        {\n                            arrayTabs.map((tabsName, index) =>{\n                                return(\n                                    <div className=\n                                        {\n                                            `tabs_todo pointer cta_btns \n                                                ${allState.classTabs === index ? \"active_tabs\" : \"\"}\n                                            `\n                                        }\n                                        onClick={() => todoTabsFun(tabsName, index)}\n                                        key={index}>{tabsName} <span className=\"item_count\" key={index}>{index === 0 ? toDoDataObject.length : index === 1 ? filterActiveCount.length : filterCompleteount.length} </span>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                    <div className=\"clear_items pointer\" \n                        onClick={() => {\n                            const confirmRemove = window.confirm(\"Are You Sure?\");\n                            if(confirmRemove){\n                                setToDoObject([]);\n                            }\n                        }}>\n                        Clear All\n                    </div>\n                </div>\n                \n            </div>\n\n        </>\n      )\n\n}\n\nexport default TodoMain","import React, {useState} from 'react'\nimport BoxData from './BoxData.json'\nimport {} from './Box.css'\n\nfunction BoxItems() {\n    const [isSelected, setIsSelected] = useState(true);\n    const boxClick = (event) => {\n        setIsSelected(isSelected === event ? false : event);\n    }\n\n    \n    return (\n        <div className=\"boxes_main\">\n            {  \n                BoxData.map((boxItem, boxId) =>{\n                    return(\n                        <div className={`accor_main`} key={boxId}>\n                            <div className={`flex pointer`} onClick={() => boxClick(boxId)}>\n                                <div className={``}>{boxItem.title}</div>\n                                <div className={`acoor_icon ${isSelected === boxId ? \"rotate_aero\" : \"\"}`}>\n                                    +\n                                </div>\n                            </div>\n\n                            <div className={`accod_content ${isSelected === boxId  ? \"show_content\" : \"\"}`}>\n                                <span className=\"highligh_title\">\n                                    Title {boxId}\n                                </span> \n                                 {boxItem.content}\n                            </div>\n                            \n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default BoxItems\n","import React, { createContext, useState } from \"react\";\n\nexport const CartDataContext = createContext();\n\nexport const DataToSendFun = (props) =>{\n    const shopingData = localStorage.getItem(\"allShopingData\");\n    const [cartItemsData, cartItemsFun] = useState(shopingData);\n\n    return(\n\n        <CartDataContext.Provider value={{\n            cartItemsData\n        }}>\n            {props.children}\n        </CartDataContext.Provider>\n    )\n}","import { useContext, useState} from 'react'\nimport { CartDataContext } from '../../Context/CartDataContext'\nconst ShopingItem = (props) => {\n    return(\n        <div className=\"product_list\">\n            {\n                props.ShopingData.map((data) => {\n                    const {id, image, name, old_price, price, dexcription} = data;                    \n                    return(\n                        <div className=\"item_main\" key={id}>\n                            <div className=\"relative\">\n                                <img className=\"prod_img\" src={image} alt={dexcription}/>\n                                {/* <div className=\"fav_icons pointer\">\n                                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <g fill=\"none\" fillRule=\"evenodd\">\n                                            <path d=\"M0 0h24v24H0z\"></path>\n                                            <path d=\"M16.665 3.286C20.002 3.286 22 5.239 22 8.509c0 2.678-2.455 4.922-2.556 5.022l-6.953 6.697a.692.692 0 0 1-.491.2.692.692 0 0 1-.491-.2l-6.964-6.72c-.09-.077-2.545-2.32-2.545-5 0-3.27 1.998-5.222 5.335-5.222 1.953 0 3.783 1.54 4.665 2.41.882-.87 2.712-2.41 4.665-2.41z\" stroke=\"#fffbfb\" strokeWidth=\"1.5\"></path>\n                                        </g>\n                                    </svg>\n                                </div> */}\n                            </div>\n                            <div className=\"prod_details\">\n                                <div className=\"item_name\">{name}</div>\n                                <div className=\"item_desc\">{dexcription}</div>\n                                <div className=\"flex\">\n                                    <div className=\"item_price\">{price} </div>\n                                    <div className=\"item_old_price\">{old_price}</div>\n                                </div>\n                                {\n                                    props.itemsObjId.includes(id) ? \n                                        <div className=\"add_item remove_items pointer\" onClick={() => props.removeFromCart(data.id)}>Remove From Cart</div>\n                                    : <div className=\"add_item pointer\" onClick={() => props.addToCart(data, data.id)}>Add To Cart</div>\n                                }\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default ShopingItem","import React, { useContext, useState} from 'react'\nimport ShopingDataJson from './ShopingListData.json'\nimport ShopingItem from './ShopingItem'\nimport {} from '../ShopingCart/Shoping.css'\nimport { CartDataContext } from '../../Context/CartDataContext'\n\n\nconst getShopingData = () =>{\n    const shopingData = localStorage.getItem(\"allShopingData\");\n    if(shopingData){\n        return JSON.parse(shopingData);\n    }else{\n        return [];\n    }\n}\nconst ShopingMain = () => {\n    const cartItemsData = useContext(CartDataContext)\n    const [shopingData, shopingDataFun] = useState(getShopingData())\n\n    const [allState, setAllState] = useState(\n        {\n            currentItem: null,\n            itemsObjId: \"\"\n        }\n    )\n\n    if(JSON.parse(cartItemsData.cartItemsData)){\n        let allIds = \"\";\n        JSON.parse(cartItemsData.cartItemsData).map((allItems) =>{\n            allIds += allItems.itemId\n        })\n        allState.itemsObjId = allIds;\n    }\n\n    const shopingDataObj = () =>{\n        \n        const {id, name, price, old_price, image, dexcription} = allState.currentItem;\n\n        shopingDataFun(\n            [\n                {\n                    itemId : id,\n                    itemName : name,\n                    itemPrice : price,\n                    itemOldPrice : old_price,\n                    itemImage : image,\n                    itemDesc : dexcription,\n                    quantity : 1\n                },\n                ...shopingData\n            ]\n        )\n    }\n\n    const addToCart = (items, id) => {\n        allState.currentItem = items;\n        shopingDataObj();\n        let string = \"\"\n        string += String(id)\n        // allState.itemsObjId += string;\n        console.log(string)\n    }\n\n    const removeFromCart = (id) => {\n        const removeItem = shopingData.filter((remvItems) =>{\n            return remvItems.itemId !== id;\n        })\n\n        shopingDataFun(removeItem);\n    }\n\n    localStorage.setItem(\"allShopingData\", JSON.stringify(shopingData));\n\n    return (\n        <div className=\"all_shoping_content\">\n\n\n\n\n            <ShopingItem\n                ShopingData={ShopingDataJson}\n                addToCart={addToCart}\n                itemsObjId={allState.itemsObjId}\n                removeFromCart={removeFromCart}\n            >\n            </ShopingItem>\n        </div>\n    )\n}\n\nexport default ShopingMain\n","import './Main.css';\nimport Menu from './Components/Header/Menu';\nimport TabsMain from './Components/Tabs/TabsMain'\nimport Example2 from './Components/SearchPage/SearchMain';\nimport Example3 from './Components/TodoPage/TodoMain'\nimport Example4 from './Components/Accordion/BoxItems'\nimport ShopingMain from './Components/ShopingCart/ShopingMain'\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { DataToSendFun } from './Context/CartDataContext';\nfunction App() {\n  return (\n    <>\n      <DataToSendFun>\n          <HashRouter basename={process.env.PUBLIC_URL}>\n            <Menu></Menu>\n            <div className=\"main_container\">\n              <Switch>\n                  <Route exact path='/' component={Example3}></Route>\n                  <Route exact path='/TabsMain' component={TabsMain}></Route>\n                  <Route exact path='/SearchPage' component={Example2}></Route>\n                  <Route exact path='/Accordion' component={Example4}></Route>\n                  <Route exact path='/ShopingCart' component={ShopingMain}></Route>\n              </Switch>\n            </div>\n          </HashRouter>\n        </DataToSendFun>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import {HashRouter as Router} from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Router> */}\n      <App />\n    {/* </Router> */}\n  </React.StrictMode>,\n  document.getElementById('main')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}