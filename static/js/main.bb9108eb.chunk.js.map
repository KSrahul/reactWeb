{"version":3,"sources":["Components/Header/logo.svg","Components/Header/Menu.js","Components/Sample1/FilterTabs.js","Components/Sample1/FilterItems.js","Components/Sample1/FilterMain.js","Components/Sample2/SearchItems.js","Components/Sample2/InputSearchView.js","Components/Sample2/SearchMain.js","Components/Sample3/TodoItems.js","Components/Sample3/TodoMain.js","App.jsx","reportWebVitals.js","index.jsx"],"names":["Menu","className","src","logo","width","alt","exact","activeClassName","to","FilterTabs","props","uniquItems","map","itemsCate","indexVal","data-name","classActive","onClick","filterItemsData","filterAllItems","allCateItems","allItems","id","image","category","dexcription","data-itemcate","FilterMain","allItemsValue","Set","allFilterData","uniqItems","useState","filterSelected","filterData","indexOf","classActiveCheck","classActiveFun","useEffect","selectedFilterItems","filter","selectedFilter","length","itemsName","indexNum","updatedItems","currentItem","FilterItems","SearchItems","searchItemsData","searchItes","index","onMouseOver","onHover","statename","InputSearchView","onChange","InputValChange","value","inputSetValue","type","placeholder","removeInputVal","xmlns","height","viewBox","fill","fillRule","d","SearchMain","filterSearchData","setSearchDataFun","wordEnter","wordEnterFun","valInput","searchText","target","toLowerCase","newSearchData","JsonSearchData","includes","hoverVal","TodoItems","allTodoList","todoListObj","isDone","contentEditable","contendEdit","suppressContentEditableWarning","listName","editItems","markRead","removeItems","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","TodoMain","inputFocus","useRef","inputValue","setInputValue","todoLS","localStorage","getItem","JSON","parse","getTodoFromLS","toDoObject","setToDoObject","todoDataObj","Date","getTime","toString","isRemove","setItem","stringify","current","focus","event","onKeyDown","key","ref","targetTodoItem","restTodoData","todoNew","itemObj","markedReadData","markedRead","editObj","editField","prompt","editedData","edited","App","basename","process","path","component","Example2","Example3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb9108eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport {} from './navbar.css';\nimport {Link, NavLink} from 'react-router-dom'\n\nconst Menu = () => {\n    return (\n        <>\n            <div className=\"flex header_main\">\n                <div>\n                    <img src={logo} width=\"100\" alt=\"logo\" />\n                </div>\n                <ul className=\"flex menu_list\">             \n                    <li>\n                        <NavLink exact activeClassName=\"active_menu\" to=\"/\">Sample1</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeClassName=\"active_menu\" to=\"/Example2\">Sample2</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeClassName=\"active_menu\" to=\"/Example3\">Sample3</NavLink>\n                    </li>\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default Menu;","// uniquItems, filterItemsData, classActive\nconst FilterTabs = (props) => {\n    return(\n        <>\n            <div className=\"tabs_boxes_container\">\n                <div className=\"tabs_raw\">\n                    {\n                        props.uniquItems.map((itemsCate, indexVal) => {\n                            return(\n                                <div key={indexVal} data-name={itemsCate}\n                                    className={\n                                        `tabsLink ${props.classActive === indexVal ? \"activeTabs\" : \"\"}`\n                                    }\n                                    onClick={() => props.filterItemsData(itemsCate, indexVal)}\n                                >\n                                    {itemsCate}\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default FilterTabs;","const filterAllItems = (props) => {\n    return(\n        <>\n            <div className=\"items_main\">\n                {\n                    props.allCateItems.map((allItems) =>{\n                        const {id, image, category, dexcription} = allItems;\n                        return( \n                            <div key={id} className=\"items_divs\" data-itemcate={category}>\n                                <img src={image} alt={dexcription} />\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        </>\n    )\n}\nexport default filterAllItems;","import React, { useState, useEffect } from 'react';\nimport {} from './Filter.css';\nimport FilterTabs from './FilterTabs';\nimport FilterItems from './FilterItems';\nimport allFilterData from './FilterData';\n\n\nconst FilterMain = () => {\n    const allItemsValue = [\n        \"all\", ...new Set(allFilterData.map((uniqItems) => {\n            return uniqItems.category\n        }))  \n    ];\n\n    const [filterSelected] = useState(allItemsValue[0]);\n    const [filterData, filterItemsData] = useState(allFilterData);\n    const [classActiveCheck, classActiveFun] = useState(allItemsValue.indexOf(filterSelected));\n    const clickTabs = (itemsName, indexNum) => {\n        const updatedItems = allFilterData.filter((currentItem) => {\n            return currentItem.category === itemsName ? currentItem : false;\n        })\n        filterItemsData(updatedItems.length > 0 ? updatedItems : allFilterData)\n        classActiveFun(indexNum);\n    }\n\n    useEffect(() => {\n        const selectedFilterItems = filterData.filter((selectedFilter) => {\n            return selectedFilter.category === filterSelected ? selectedFilter : false;\n        })\n        filterItemsData(selectedFilterItems.length > 0 ? selectedFilterItems : allFilterData)\n    }, []);\n\n    return(\n        <>\n            <FilterTabs \n                uniquItems={allItemsValue}\n                filterItemsData={clickTabs} \n                classActive={classActiveCheck}>\n             </FilterTabs>\n\n            <FilterItems \n                allCateItems={filterData}>\n            </FilterItems>\n        </>\n    )\n}\n\nexport default FilterMain;","const SearchItems = (props) => {\n    return(\n        <>\n            {\n                props.searchItemsData.length > 0 ?\n                    <div className=\"search_content\">\n                        {\n                            props.searchItemsData.map((searchItes, index) => {\n                                return(\n                                    <div key={index} className=\"searchItem\" \n                                        onMouseOver={() => props.onHover(searchItes.statename)}>\n                                        {searchItes.statename}\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                :false\n            }\n        </>\n    )\n}\n\nexport default SearchItems","const InputSearchView = (props) => {\n    return(\n        <>\n            <input onChange={props.InputValChange} value={props.inputSetValue} className=\"search_input\" type=\"text\" placeholder=\"Search your state, e.g Haryana\" />\n            <div className=\"search_pop_icon\">\n                {\n                    props.inputSetValue.length > 0 ?\n                        <div className=\"cross_icon\" onClick={props.removeInputVal}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"22\" viewBox=\"0 0 22 22\">\n                                <g fill=\"none\" fillRule=\"evenodd\">\n                                    <path fill=\"#BDBDBD\" d=\"M11 21C5.477 21 1 16.523 1 11S5.477 1 11 1s10 4.477 10 10-4.477 10-10 10zm.95-10l2.853-2.852a.672.672 0 10-.95-.951L11 10.049 8.148 7.197a.672.672 0 10-.951.95L10.049 11l-2.852 2.852a.672.672 0 00.95.951L11 11.951l2.852 2.852a.672.672 0 10.951-.95L11.951 11z\"></path>\n                                    <path d=\"M0 0H22V22H0z\"></path>\n                                </g>\n                            </svg>\n                        </div>\n                    :\n                    <div className=\"search_icon\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"22\" viewBox=\"0 0 22 22\">\n                            <g fill=\"none\" fillRule=\"evenodd\">\n                                <path fill=\"#9E9E9E\" fillRule=\"nonzero\" d=\"M18.465 17.319l-3.728-3.81a6.13 6.13 0 001.484-3.995c0-3.426-2.838-6.214-6.325-6.214-3.488 0-6.325 2.788-6.325 6.214 0 3.426 2.837 6.214 6.325 6.214 1.309 0 2.557-.388 3.623-1.124l3.757 3.838c.157.16.368.249.595.249.214 0 .417-.08.571-.226a.801.801 0 00.023-1.146zM9.895 4.92c2.578 0 4.676 2.06 4.676 4.593s-2.098 4.593-4.675 4.593c-2.578 0-4.675-2.06-4.675-4.593s2.097-4.593 4.675-4.593z\"></path>\n                                <path d=\"M0 0H22V22H0z\"></path>\n                            </g>\n                        </svg>\n                    </div>\n                }\n            </div>\n        </>\n    )\n}\nexport default InputSearchView","import React, { useState } from 'react'\nimport {} from '../Sample2/Search.css'\nimport JsonSearchData from './SearchData.json'\nimport SearchItems from './SearchItems'\nimport InputSearchView from './InputSearchView'\nconst SearchMain = () => {\n    const [filterSearchData, setSearchDataFun] = useState([]);\n    const [wordEnter, wordEnterFun] = useState(\"\");\n    const InputValueChange = (valInput) => {\n        const searchText = valInput.target.value.toLowerCase();\n        wordEnterFun(searchText);\n        const newSearchData = JsonSearchData.filter((value) => {\n            const findState = value.statename.toLowerCase();\n            return findState.includes(searchText);\n        });\n        \n        searchText === \"\" ? setSearchDataFun([]) : setSearchDataFun(newSearchData);\n    }\n    const removeInputVal = () => {\n        setSearchDataFun([]);\n        wordEnterFun(\"\");\n    }\n    const hoverText = (hoverVal) => {\n        wordEnterFun(hoverVal);\n    }\n\n    return(\n        <div className=\"search_main\">\n            <div className=\"indian_sta\">Type.. any state name of India.</div>\n            <div className=\"relative\">\n\n                <InputSearchView \n                    InputValChange={InputValueChange}\n                    removeInputVal={removeInputVal}\n                    inputSetValue={wordEnter}>\n                 </InputSearchView>\n\n                <SearchItems \n                    searchItemsData={filterSearchData}\n                    onHover={hoverText}>\n                </SearchItems>\n                \n            </div>\n            {\n                wordEnter.length > 0 && filterSearchData.length === 0 ?\n                    <>\n                        <div className=\"show_error\">No Result Found :(</div>\n                    </>\n                : false\n            }\n        </div>\n    )\n}\n\n\nexport default SearchMain","const TodoItems = (props) => {\n    return(\n        <>\n            {\n                props.allTodoList.map((todoListObj) =>{\n                    return(\n                        <div className={`flex added_items ${todoListObj.isDone === true ? 'marked_done' : ''}`} key={todoListObj.id}>\n                            <div className=\"task_name\" contentEditable={props.contendEdit} suppressContentEditableWarning={true}>\n                                {todoListObj.listName}\n                            </div>\n                            <div className=\"flex right_icons\">\n                                <div className=\"flex pointer edit_icon\" onClick={() => props.editItems(todoListObj)}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"white\">\n                                        <path d=\"M1.438 16.872l-1.438 7.128 7.127-1.438 12.642-12.64-5.69-5.69-12.641 12.64zm2.271 2.253l-.85-.849 11.141-11.125.849.849-11.14 11.125zm20.291-13.436l-2.817 2.819-5.69-5.691 2.816-2.817 5.691 5.689z\" />\n                                    </svg>\n                                </div>\n                                <div className=\"pointer eye_mark relative flex\" onClick={() => props.markRead(todoListObj)}>\n                                    <svg fill=\"white\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                        <path d=\"M15 12c0 1.654-1.346 3-3 3s-3-1.346-3-3 1.346-3 3-3 3 1.346 3 3zm9-.449s-4.252 8.449-11.985 8.449c-7.18 0-12.015-8.449-12.015-8.449s4.446-7.551 12.015-7.551c7.694 0 11.985 7.551 11.985 7.551zm-7 .449c0-2.757-2.243-5-5-5s-5 2.243-5 5 2.243 5 5 5 5-2.243 5-5z\" />\n                                    </svg>\n                                    <div className=\"lin_eye\"></div>\n                                </div>\n                                <div className=\"remove_item flex pointer\" onClick={() => props.removeItems(todoListObj.id)}>\n                                    <svg xmlns='http://www.w3.org/2000/svg' width='22' height='22' \n                                        viewBox='0 0 24 24' fill='none' stroke='#ff3d46' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round'>\n                                        <polyline points='3 6 5 6 21 6' />\n                                        <path d='M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2' />\n                                        <line x1='10' y1='11' x2='10' y2='17' />\n                                        <line x1='14' y1='11' x2='14' y2='17' />\n                                    </svg>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </>\n    )\n}\n\nexport default TodoItems","import React, { useState, useEffect, useRef } from 'react'\nimport {} from './Todo.css'\nimport TodoItems from './TodoItems'\n\nconst getTodoFromLS = () =>{\n    const todoLS = localStorage.getItem(\"allTodoData\");\n    if(todoLS){\n        return JSON.parse(todoLS);\n    }else{\n        return [];\n    }\n}\nconst TodoMain = () => {\n    const inputFocus = useRef(null);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [toDoObject, setToDoObject] = useState(getTodoFromLS());\n    const [getEditText, setEditText] = useState(\"\");\n    const todoDataObj = () =>{\n        setToDoObject(\n            [...toDoObject,\n                {\n                    id : new Date().getTime().toString(),\n                    listName : inputValue,\n                    isDone : false,\n                    isRemove : false,\n                }\n            ]\n        )\n    }\n    const inputType = (event) => {\n        setInputValue(event.target.value);\n    }\n\n    const addItems = () => {\n        if(inputValue.length > 0){\n            setInputValue(\"\");\n            todoDataObj();\n        }\n    }\n\n    const keyCheck = (event) => {\n        if(event.key === \"Enter\" && inputValue.length > 0){\n            setInputValue(\"\");\n            todoDataObj();\n        }\n    }\n\n    const removeSelectedItems = (targetTodoItem) => {\n        const restTodoData = toDoObject.filter((todoNew) =>{\n            return todoNew.id !== targetTodoItem;\n        })\n        setToDoObject(restTodoData);\n    }\n\n    const markAsDone = (itemObj) => {\n        const markedReadData = toDoObject.filter((markedRead) => {\n            if(markedRead.id === itemObj.id){\n                markedRead.isDone === false ? \n                markedRead.isDone = true : \n                markedRead.isDone = false;\n            }\n            return markedRead;\n        })\n\n        setToDoObject(markedReadData);\n    }\n\n    const editTodoItems = (editObj) => {\n        const editField = prompt(\"Edit\", editObj.listName);\n        if(editField !== null){\n            const editedData = toDoObject.filter((edited) => {\n                if(edited.id === editObj.id){\n                    editObj.listName = editField;\n                }\n                return edited;\n            })\n            setToDoObject(editedData);\n        }\n    }\n\n    localStorage.setItem(\"allTodoData\", JSON.stringify(toDoObject));\n    \n    useEffect(() => {\n        inputFocus.current.focus();\n    }, [])\n      return(\n          <>\n            <div className=\"todo_main\">\n                <div className=\"todo_text\">Add Your Todo List</div>\n                <div className=\"input_add relative\">\n                    <input \n                        onChange={inputType}\n                        onKeyDown={keyCheck}\n                        value={inputValue}\n                        ref={inputFocus}\n                        type=\"text\" \n                        placeholder=\"Add New Task\" \n                    />\n\n                    <div className=\"add_btn pointer\" \n                        onClick={addItems}>\n                        +\n                    </div>\n                </div>\n                {\n                    toDoObject.length > 0 ? \n                        <div className=\"all_todo\">\n                            <TodoItems \n                                allTodoList={toDoObject}\n                                removeItems={removeSelectedItems}\n                                markRead={markAsDone}\n                                editItems={editTodoItems}>\n                            </TodoItems>\n                            <div className=\"clear_items pointer\" onClick={() => setToDoObject([])}>Clear Items</div>\n                        </div>\n                    :false\n                }\n            </div>\n\n        </>\n      )\n\n}\n\nexport default TodoMain","import './Main.css';\nimport Menu from './Components/Header/Menu';\nimport FilterMain from './Components/Sample1/FilterMain'\nimport Example2 from './Components/Sample2/SearchMain';\nimport Example3 from './Components/Sample3/TodoMain'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Menu></Menu>\n        <div className=\"main_container\">\n          <Switch>\n              <Route exact path='/' component={FilterMain}></Route>\n              <Route exact path='/Example2' component={Example2}></Route>\n              <Route exact path='/Example3' component={Example3}></Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import {HashRouter as Router} from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Router> */}\n      <App />\n    {/* </Router> */}\n  </React.StrictMode>,\n  document.getElementById('main')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}